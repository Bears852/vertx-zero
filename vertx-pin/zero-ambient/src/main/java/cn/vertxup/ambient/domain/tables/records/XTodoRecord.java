/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ambient.domain.tables.records;


import cn.vertxup.ambient.domain.tables.XTodo;
import cn.vertxup.ambient.domain.tables.interfaces.IXTodo;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTodoRecord extends UpdatableRecordImpl<XTodoRecord> implements IXTodo {

    private static final long serialVersionUID = -1029529625;

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.KEY</code>. 「key」- 待办主键
     */
    @Override
    public XTodoRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.KEY</code>. 「key」- 待办主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.SERIAL</code>. 「serial」- 待办编号，使用 X_NUMBER 生成
     */
    @Override
    public XTodoRecord setSerial(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.SERIAL</code>. 「serial」- 待办编号，使用 X_NUMBER 生成
     */
    @Override
    public String getSerial() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.NAME</code>. 「name」- 待办名称（标题）
     */
    @Override
    public XTodoRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.NAME</code>. 「name」- 待办名称（标题）
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CODE</code>. 「code」- 待办系统码
     */
    @Override
    public XTodoRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CODE</code>. 「code」- 待办系统码
     */
    @Override
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ICON</code>. 「icon」- 待办显示的图标
     */
    @Override
    public XTodoRecord setIcon(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ICON</code>. 「icon」- 待办显示的图标
     */
    @Override
    public String getIcon() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.STATUS</code>. 「status」- 待办状态
     */
    @Override
    public XTodoRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.STATUS</code>. 「status」- 待办状态
     */
    @Override
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TODO_URL</code>. 「todoUrl」- 待办路径
     */
    @Override
    public XTodoRecord setTodoUrl(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TODO_URL</code>. 「todoUrl」- 待办路径
     */
    @Override
    public String getTodoUrl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TYPE</code>. 「type」- 待办类型
     */
    @Override
    public XTodoRecord setType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TYPE</code>. 「type」- 待办类型
     */
    @Override
    public String getType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.EXPIRED_AT</code>. 「expiredAt」- 超时时间
     */
    @Override
    public XTodoRecord setExpiredAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.EXPIRED_AT</code>. 「expiredAt」- 超时时间
     */
    @Override
    public LocalDateTime getExpiredAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_ID</code>. 「modelId」- 关联的模型identifier，用于描述
     */
    @Override
    public XTodoRecord setModelId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_ID</code>. 「modelId」- 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_KEY</code>. 「modelKey」- 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public XTodoRecord setModelKey(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_KEY</code>. 「modelKey」- 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.MODEL_CATEGORY</code>. 「modelCategory」- 关联的category记录，只包含叶节点
     */
    @Override
    public XTodoRecord setModelCategory(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.MODEL_CATEGORY</code>. 「modelCategory」- 关联的category记录，只包含叶节点
     */
    @Override
    public String getModelCategory() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_GROUP</code>. 「toGroup」- 待办指定组
     */
    @Override
    public XTodoRecord setToGroup(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_GROUP</code>. 「toGroup」- 待办指定组
     */
    @Override
    public String getToGroup() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_USER</code>. 「toUser」- 待办指定人
     */
    @Override
    public XTodoRecord setToUser(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_USER</code>. 「toUser」- 待办指定人
     */
    @Override
    public String getToUser() {
        return (String) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TO_ROLE</code>. 「toRole」- 待办角色（集体）
     */
    @Override
    public XTodoRecord setToRole(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TO_ROLE</code>. 「toRole」- 待办角色（集体）
     */
    @Override
    public String getToRole() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ASSIGNED_BY</code>. 「assignedBy」- 待办指派人
     */
    @Override
    public XTodoRecord setAssignedBy(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ASSIGNED_BY</code>. 「assignedBy」- 待办指派人
     */
    @Override
    public String getAssignedBy() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ACCEPTED_BY</code>. 「acceptedBy」- 待办接收人
     */
    @Override
    public XTodoRecord setAcceptedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ACCEPTED_BY</code>. 「acceptedBy」- 待办接收人
     */
    @Override
    public String getAcceptedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.FINISHED_BY</code>. 「finishedBy」- 待办完成人
     */
    @Override
    public XTodoRecord setFinishedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.FINISHED_BY</code>. 「finishedBy」- 待办完成人
     */
    @Override
    public String getFinishedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.TRACE_ID</code>. 「traceId」- 同一个流程的待办执行分组
     */
    @Override
    public XTodoRecord setTraceId(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.TRACE_ID</code>. 「traceId」- 同一个流程的待办执行分组
     */
    @Override
    public String getTraceId() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XTodoRecord setActive(Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XTodoRecord setSigma(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(20);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XTodoRecord setMetadata(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(21);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XTodoRecord setLanguage(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(22);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XTodoRecord setCreatedAt(LocalDateTime value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(23);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XTodoRecord setCreatedBy(String value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(24);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XTodoRecord setUpdatedAt(LocalDateTime value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(25);
    }

    /**
     * Setter for <code>DB_ETERNAL.X_TODO.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XTodoRecord setUpdatedBy(String value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.X_TODO.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(26);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IXTodo from) {
        setKey(from.getKey());
        setSerial(from.getSerial());
        setName(from.getName());
        setCode(from.getCode());
        setIcon(from.getIcon());
        setStatus(from.getStatus());
        setTodoUrl(from.getTodoUrl());
        setType(from.getType());
        setExpiredAt(from.getExpiredAt());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setModelCategory(from.getModelCategory());
        setToGroup(from.getToGroup());
        setToUser(from.getToUser());
        setToRole(from.getToRole());
        setAssignedBy(from.getAssignedBy());
        setAcceptedBy(from.getAcceptedBy());
        setFinishedBy(from.getFinishedBy());
        setTraceId(from.getTraceId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IXTodo> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XTodoRecord
     */
    public XTodoRecord() {
        super(XTodo.X_TODO);
    }

    /**
     * Create a detached, initialised XTodoRecord
     */
    public XTodoRecord(String key, String serial, String name, String code, String icon, String status, String todoUrl, String type, LocalDateTime expiredAt, String modelId, String modelKey, String modelCategory, String toGroup, String toUser, String toRole, String assignedBy, String acceptedBy, String finishedBy, String traceId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(XTodo.X_TODO);

        set(0, key);
        set(1, serial);
        set(2, name);
        set(3, code);
        set(4, icon);
        set(5, status);
        set(6, todoUrl);
        set(7, type);
        set(8, expiredAt);
        set(9, modelId);
        set(10, modelKey);
        set(11, modelCategory);
        set(12, toGroup);
        set(13, toUser);
        set(14, toRole);
        set(15, assignedBy);
        set(16, acceptedBy);
        set(17, finishedBy);
        set(18, traceId);
        set(19, active);
        set(20, sigma);
        set(21, metadata);
        set(22, language);
        set(23, createdAt);
        set(24, createdBy);
        set(25, updatedAt);
        set(26, updatedBy);
    }
}
