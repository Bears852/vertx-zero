/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ambient.domain.tables.daos;


import cn.vertxup.ambient.domain.tables.XActivity;
import cn.vertxup.ambient.domain.tables.records.XActivityRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XActivityDao extends DAOImpl<XActivityRecord, cn.vertxup.ambient.domain.tables.pojos.XActivity, String> implements VertxDAO<cn.vertxup.ambient.domain.tables.records.XActivityRecord,cn.vertxup.ambient.domain.tables.pojos.XActivity,java.lang.String> {

    /**
     * Create a new XActivityDao without any configuration
     */
    public XActivityDao() {
        super(XActivity.X_ACTIVITY, cn.vertxup.ambient.domain.tables.pojos.XActivity.class);
    }

    /**
     * Create a new XActivityDao with an attached configuration
     */
    public XActivityDao(Configuration configuration) {
        super(XActivity.X_ACTIVITY, cn.vertxup.ambient.domain.tables.pojos.XActivity.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ambient.domain.tables.pojos.XActivity object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByKey(String... values) {
        return fetch(XActivity.X_ACTIVITY.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ambient.domain.tables.pojos.XActivity fetchOneByKey(String value) {
        return fetchOne(XActivity.X_ACTIVITY.KEY, value);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByType(String... values) {
        return fetch(XActivity.X_ACTIVITY.TYPE, values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchBySerial(String... values) {
        return fetch(XActivity.X_ACTIVITY.SERIAL, values);
    }

    /**
     * Fetch records that have <code>DESCRIPTION IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByDescription(String... values) {
        return fetch(XActivity.X_ACTIVITY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByModelId(String... values) {
        return fetch(XActivity.X_ACTIVITY.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByModelKey(String... values) {
        return fetch(XActivity.X_ACTIVITY.MODEL_KEY, values);
    }

    /**
     * Fetch records that have <code>RECORD_OLD IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByRecordOld(String... values) {
        return fetch(XActivity.X_ACTIVITY.RECORD_OLD, values);
    }

    /**
     * Fetch records that have <code>RECORD_NEW IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByRecordNew(String... values) {
        return fetch(XActivity.X_ACTIVITY.RECORD_NEW, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchBySigma(String... values) {
        return fetch(XActivity.X_ACTIVITY.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByLanguage(String... values) {
        return fetch(XActivity.X_ACTIVITY.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByActive(Boolean... values) {
        return fetch(XActivity.X_ACTIVITY.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByMetadata(String... values) {
        return fetch(XActivity.X_ACTIVITY.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(XActivity.X_ACTIVITY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByCreatedBy(String... values) {
        return fetch(XActivity.X_ACTIVITY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(XActivity.X_ACTIVITY.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchByUpdatedBy(String... values) {
        return fetch(XActivity.X_ACTIVITY.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ambient.domain.tables.pojos.XActivity> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.TYPE,values);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.SERIAL,values);
    }

    /**
     * Fetch records that have <code>DESCRIPTION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByDescriptionAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.DESCRIPTION,values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByModelIdAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.MODEL_ID,values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByModelKeyAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.MODEL_KEY,values);
    }

    /**
     * Fetch records that have <code>RECORD_OLD IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByRecordOldAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.RECORD_OLD,values);
    }

    /**
     * Fetch records that have <code>RECORD_NEW IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByRecordNewAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.RECORD_NEW,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(XActivity.X_ACTIVITY.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XActivity.X_ACTIVITY.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XActivity.X_ACTIVITY.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XActivity>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(XActivity.X_ACTIVITY.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
