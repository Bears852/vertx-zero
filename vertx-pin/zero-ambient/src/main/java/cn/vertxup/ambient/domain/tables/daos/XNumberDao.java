/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ambient.domain.tables.daos;


import cn.vertxup.ambient.domain.tables.XNumber;
import cn.vertxup.ambient.domain.tables.records.XNumberRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XNumberDao extends DAOImpl<XNumberRecord, cn.vertxup.ambient.domain.tables.pojos.XNumber, String> implements VertxDAO<cn.vertxup.ambient.domain.tables.records.XNumberRecord,cn.vertxup.ambient.domain.tables.pojos.XNumber,java.lang.String> {

    /**
     * Create a new XNumberDao without any configuration
     */
    public XNumberDao() {
        super(XNumber.X_NUMBER, cn.vertxup.ambient.domain.tables.pojos.XNumber.class);
    }

    /**
     * Create a new XNumberDao with an attached configuration
     */
    public XNumberDao(Configuration configuration) {
        super(XNumber.X_NUMBER, cn.vertxup.ambient.domain.tables.pojos.XNumber.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ambient.domain.tables.pojos.XNumber object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByKey(String... values) {
        return fetch(XNumber.X_NUMBER.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ambient.domain.tables.pojos.XNumber fetchOneByKey(String value) {
        return fetchOne(XNumber.X_NUMBER.KEY, value);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByCode(String... values) {
        return fetch(XNumber.X_NUMBER.CODE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByComment(String... values) {
        return fetch(XNumber.X_NUMBER.COMMENT, values);
    }

    /**
     * Fetch records that have <code>CURRENT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByCurrent(Long... values) {
        return fetch(XNumber.X_NUMBER.CURRENT, values);
    }

    /**
     * Fetch records that have <code>FORMAT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByFormat(String... values) {
        return fetch(XNumber.X_NUMBER.FORMAT, values);
    }

    /**
     * Fetch records that have <code>IDENTIFIER IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByIdentifier(String... values) {
        return fetch(XNumber.X_NUMBER.IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>PREFIX IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByPrefix(String... values) {
        return fetch(XNumber.X_NUMBER.PREFIX, values);
    }

    /**
     * Fetch records that have <code>SUFFIX IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchBySuffix(String... values) {
        return fetch(XNumber.X_NUMBER.SUFFIX, values);
    }

    /**
     * Fetch records that have <code>TIME IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByTime(String... values) {
        return fetch(XNumber.X_NUMBER.TIME, values);
    }

    /**
     * Fetch records that have <code>LENGTH IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByLength(Integer... values) {
        return fetch(XNumber.X_NUMBER.LENGTH, values);
    }

    /**
     * Fetch records that have <code>STEP IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByStep(Integer... values) {
        return fetch(XNumber.X_NUMBER.STEP, values);
    }

    /**
     * Fetch records that have <code>DECREMENT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByDecrement(Boolean... values) {
        return fetch(XNumber.X_NUMBER.DECREMENT, values);
    }

    /**
     * Fetch records that have <code>APP_ID IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByAppId(String... values) {
        return fetch(XNumber.X_NUMBER.APP_ID, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByActive(Boolean... values) {
        return fetch(XNumber.X_NUMBER.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchBySigma(String... values) {
        return fetch(XNumber.X_NUMBER.SIGMA, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByMetadata(String... values) {
        return fetch(XNumber.X_NUMBER.METADATA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByLanguage(String... values) {
        return fetch(XNumber.X_NUMBER.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(XNumber.X_NUMBER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByCreatedBy(String... values) {
        return fetch(XNumber.X_NUMBER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(XNumber.X_NUMBER.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchByUpdatedBy(String... values) {
        return fetch(XNumber.X_NUMBER.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ambient.domain.tables.pojos.XNumber> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.CODE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.COMMENT,values);
    }

    /**
     * Fetch records that have <code>CURRENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByCurrentAsync(List<Long> values) {
        return fetchAsync(XNumber.X_NUMBER.CURRENT,values);
    }

    /**
     * Fetch records that have <code>FORMAT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByFormatAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.FORMAT,values);
    }

    /**
     * Fetch records that have <code>IDENTIFIER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByIdentifierAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.IDENTIFIER,values);
    }

    /**
     * Fetch records that have <code>PREFIX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByPrefixAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.PREFIX,values);
    }

    /**
     * Fetch records that have <code>SUFFIX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchBySuffixAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.SUFFIX,values);
    }

    /**
     * Fetch records that have <code>TIME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByTimeAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.TIME,values);
    }

    /**
     * Fetch records that have <code>LENGTH IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByLengthAsync(List<Integer> values) {
        return fetchAsync(XNumber.X_NUMBER.LENGTH,values);
    }

    /**
     * Fetch records that have <code>STEP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByStepAsync(List<Integer> values) {
        return fetchAsync(XNumber.X_NUMBER.STEP,values);
    }

    /**
     * Fetch records that have <code>DECREMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByDecrementAsync(List<Boolean> values) {
        return fetchAsync(XNumber.X_NUMBER.DECREMENT,values);
    }

    /**
     * Fetch records that have <code>APP_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByAppIdAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.APP_ID,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(XNumber.X_NUMBER.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.SIGMA,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.METADATA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XNumber.X_NUMBER.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XNumber.X_NUMBER.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XNumber>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(XNumber.X_NUMBER.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
