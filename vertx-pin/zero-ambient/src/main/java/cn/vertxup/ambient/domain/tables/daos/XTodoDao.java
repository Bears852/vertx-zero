/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ambient.domain.tables.daos;


import cn.vertxup.ambient.domain.tables.XTodo;
import cn.vertxup.ambient.domain.tables.records.XTodoRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTodoDao extends DAOImpl<XTodoRecord, cn.vertxup.ambient.domain.tables.pojos.XTodo, String> implements VertxDAO<cn.vertxup.ambient.domain.tables.records.XTodoRecord,cn.vertxup.ambient.domain.tables.pojos.XTodo,java.lang.String> {

    /**
     * Create a new XTodoDao without any configuration
     */
    public XTodoDao() {
        super(XTodo.X_TODO, cn.vertxup.ambient.domain.tables.pojos.XTodo.class);
    }

    /**
     * Create a new XTodoDao with an attached configuration
     */
    public XTodoDao(Configuration configuration) {
        super(XTodo.X_TODO, cn.vertxup.ambient.domain.tables.pojos.XTodo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ambient.domain.tables.pojos.XTodo object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByKey(String... values) {
        return fetch(XTodo.X_TODO.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ambient.domain.tables.pojos.XTodo fetchOneByKey(String value) {
        return fetchOne(XTodo.X_TODO.KEY, value);
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchBySerial(String... values) {
        return fetch(XTodo.X_TODO.SERIAL, values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByName(String... values) {
        return fetch(XTodo.X_TODO.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByCode(String... values) {
        return fetch(XTodo.X_TODO.CODE, values);
    }

    /**
     * Fetch records that have <code>ICON IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByIcon(String... values) {
        return fetch(XTodo.X_TODO.ICON, values);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByStatus(String... values) {
        return fetch(XTodo.X_TODO.STATUS, values);
    }

    /**
     * Fetch records that have <code>TODO_URL IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByTodoUrl(String... values) {
        return fetch(XTodo.X_TODO.TODO_URL, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByType(String... values) {
        return fetch(XTodo.X_TODO.TYPE, values);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByExpiredAt(LocalDateTime... values) {
        return fetch(XTodo.X_TODO.EXPIRED_AT, values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByModelId(String... values) {
        return fetch(XTodo.X_TODO.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByModelKey(String... values) {
        return fetch(XTodo.X_TODO.MODEL_KEY, values);
    }

    /**
     * Fetch records that have <code>MODEL_CATEGORY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByModelCategory(String... values) {
        return fetch(XTodo.X_TODO.MODEL_CATEGORY, values);
    }

    /**
     * Fetch records that have <code>TO_GROUP IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByToGroup(String... values) {
        return fetch(XTodo.X_TODO.TO_GROUP, values);
    }

    /**
     * Fetch records that have <code>TO_USER IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByToUser(String... values) {
        return fetch(XTodo.X_TODO.TO_USER, values);
    }

    /**
     * Fetch records that have <code>TO_ROLE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByToRole(String... values) {
        return fetch(XTodo.X_TODO.TO_ROLE, values);
    }

    /**
     * Fetch records that have <code>ASSIGNED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByAssignedBy(String... values) {
        return fetch(XTodo.X_TODO.ASSIGNED_BY, values);
    }

    /**
     * Fetch records that have <code>ACCEPTED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByAcceptedBy(String... values) {
        return fetch(XTodo.X_TODO.ACCEPTED_BY, values);
    }

    /**
     * Fetch records that have <code>FINISHED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByFinishedBy(String... values) {
        return fetch(XTodo.X_TODO.FINISHED_BY, values);
    }

    /**
     * Fetch records that have <code>TRACE_ID IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByTraceId(String... values) {
        return fetch(XTodo.X_TODO.TRACE_ID, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByActive(Boolean... values) {
        return fetch(XTodo.X_TODO.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchBySigma(String... values) {
        return fetch(XTodo.X_TODO.SIGMA, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByMetadata(String... values) {
        return fetch(XTodo.X_TODO.METADATA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByLanguage(String... values) {
        return fetch(XTodo.X_TODO.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(XTodo.X_TODO.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByCreatedBy(String... values) {
        return fetch(XTodo.X_TODO.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(XTodo.X_TODO.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchByUpdatedBy(String... values) {
        return fetch(XTodo.X_TODO.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ambient.domain.tables.pojos.XTodo> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchBySerialAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.SERIAL,values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByNameAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.CODE,values);
    }

    /**
     * Fetch records that have <code>ICON IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByIconAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.ICON,values);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByStatusAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.STATUS,values);
    }

    /**
     * Fetch records that have <code>TODO_URL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByTodoUrlAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TODO_URL,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TYPE,values);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByExpiredAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XTodo.X_TODO.EXPIRED_AT,values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByModelIdAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.MODEL_ID,values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByModelKeyAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.MODEL_KEY,values);
    }

    /**
     * Fetch records that have <code>MODEL_CATEGORY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByModelCategoryAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.MODEL_CATEGORY,values);
    }

    /**
     * Fetch records that have <code>TO_GROUP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByToGroupAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TO_GROUP,values);
    }

    /**
     * Fetch records that have <code>TO_USER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByToUserAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TO_USER,values);
    }

    /**
     * Fetch records that have <code>TO_ROLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByToRoleAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TO_ROLE,values);
    }

    /**
     * Fetch records that have <code>ASSIGNED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByAssignedByAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.ASSIGNED_BY,values);
    }

    /**
     * Fetch records that have <code>ACCEPTED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByAcceptedByAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.ACCEPTED_BY,values);
    }

    /**
     * Fetch records that have <code>FINISHED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByFinishedByAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.FINISHED_BY,values);
    }

    /**
     * Fetch records that have <code>TRACE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByTraceIdAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.TRACE_ID,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(XTodo.X_TODO.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.SIGMA,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.METADATA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XTodo.X_TODO.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(XTodo.X_TODO.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ambient.domain.tables.pojos.XTodo>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(XTodo.X_TODO.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
