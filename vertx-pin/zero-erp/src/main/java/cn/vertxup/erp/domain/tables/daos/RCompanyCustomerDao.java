/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.daos;


import cn.vertxup.erp.domain.tables.RCompanyCustomer;
import cn.vertxup.erp.domain.tables.records.RCompanyCustomerRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RCompanyCustomerDao extends DAOImpl<RCompanyCustomerRecord, cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer, Record2<String, String>> implements VertxDAO<cn.vertxup.erp.domain.tables.records.RCompanyCustomerRecord,cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new RCompanyCustomerDao without any configuration
     */
    public RCompanyCustomerDao() {
        super(RCompanyCustomer.R_COMPANY_CUSTOMER, cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer.class);
    }

    /**
     * Create a new RCompanyCustomerDao with an attached configuration
     */
    public RCompanyCustomerDao(Configuration configuration) {
        super(RCompanyCustomer.R_COMPANY_CUSTOMER, cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer object) {
        return compositeKeyRecord(object.getCompanyId(), object.getCustomerId());
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer> fetchByCompanyId(String... values) {
        return fetch(RCompanyCustomer.R_COMPANY_CUSTOMER.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer> fetchByCustomerId(String... values) {
        return fetch(RCompanyCustomer.R_COMPANY_CUSTOMER.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer> fetchByComment(String... values) {
        return fetch(RCompanyCustomer.R_COMPANY_CUSTOMER.COMMENT, values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer>> fetchByCompanyIdAsync(List<String> values) {
        return fetchAsync(RCompanyCustomer.R_COMPANY_CUSTOMER.COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer>> fetchByCustomerIdAsync(List<String> values) {
        return fetchAsync(RCompanyCustomer.R_COMPANY_CUSTOMER.CUSTOMER_ID,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.RCompanyCustomer>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(RCompanyCustomer.R_COMPANY_CUSTOMER.COMMENT,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
