/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.daos;


import cn.vertxup.erp.domain.tables.EIdentity;
import cn.vertxup.erp.domain.tables.records.EIdentityRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EIdentityDao extends DAOImpl<EIdentityRecord, cn.vertxup.erp.domain.tables.pojos.EIdentity, String> implements VertxDAO<cn.vertxup.erp.domain.tables.records.EIdentityRecord,cn.vertxup.erp.domain.tables.pojos.EIdentity,java.lang.String> {

    /**
     * Create a new EIdentityDao without any configuration
     */
    public EIdentityDao() {
        super(EIdentity.E_IDENTITY, cn.vertxup.erp.domain.tables.pojos.EIdentity.class);
    }

    /**
     * Create a new EIdentityDao with an attached configuration
     */
    public EIdentityDao(Configuration configuration) {
        super(EIdentity.E_IDENTITY, cn.vertxup.erp.domain.tables.pojos.EIdentity.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.erp.domain.tables.pojos.EIdentity object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByKey(String... values) {
        return fetch(EIdentity.E_IDENTITY.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.erp.domain.tables.pojos.EIdentity fetchOneByKey(String value) {
        return fetchOne(EIdentity.E_IDENTITY.KEY, value);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByCode(String... values) {
        return fetch(EIdentity.E_IDENTITY.CODE, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByType(String... values) {
        return fetch(EIdentity.E_IDENTITY.TYPE, values);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByStatus(String... values) {
        return fetch(EIdentity.E_IDENTITY.STATUS, values);
    }

    /**
     * Fetch records that have <code>COUNTRY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByCountry(String... values) {
        return fetch(EIdentity.E_IDENTITY.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>NATIVE_PLACE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByNativePlace(String... values) {
        return fetch(EIdentity.E_IDENTITY.NATIVE_PLACE, values);
    }

    /**
     * Fetch records that have <code>NATION IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByNation(String... values) {
        return fetch(EIdentity.E_IDENTITY.NATION, values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByAddress(String... values) {
        return fetch(EIdentity.E_IDENTITY.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>REALNAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByRealname(String... values) {
        return fetch(EIdentity.E_IDENTITY.REALNAME, values);
    }

    /**
     * Fetch records that have <code>BIRTHDAY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByBirthday(LocalDateTime... values) {
        return fetch(EIdentity.E_IDENTITY.BIRTHDAY, values);
    }

    /**
     * Fetch records that have <code>DRIVER_LICENSE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByDriverLicense(String... values) {
        return fetch(EIdentity.E_IDENTITY.DRIVER_LICENSE, values);
    }

    /**
     * Fetch records that have <code>CAR_PLATE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByCarPlate(String... values) {
        return fetch(EIdentity.E_IDENTITY.CAR_PLATE, values);
    }

    /**
     * Fetch records that have <code>PASSPORT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByPassport(String... values) {
        return fetch(EIdentity.E_IDENTITY.PASSPORT, values);
    }

    /**
     * Fetch records that have <code>GENDER IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByGender(Boolean... values) {
        return fetch(EIdentity.E_IDENTITY.GENDER, values);
    }

    /**
     * Fetch records that have <code>MARITAL IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByMarital(String... values) {
        return fetch(EIdentity.E_IDENTITY.MARITAL, values);
    }

    /**
     * Fetch records that have <code>CONTACT_MOBILE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByContactMobile(String... values) {
        return fetch(EIdentity.E_IDENTITY.CONTACT_MOBILE, values);
    }

    /**
     * Fetch records that have <code>CONTACT_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByContactPhone(String... values) {
        return fetch(EIdentity.E_IDENTITY.CONTACT_PHONE, values);
    }

    /**
     * Fetch records that have <code>CONTACT_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByContactAddress(String... values) {
        return fetch(EIdentity.E_IDENTITY.CONTACT_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>CONTACT_EMAIL IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByContactEmail(String... values) {
        return fetch(EIdentity.E_IDENTITY.CONTACT_EMAIL, values);
    }

    /**
     * Fetch records that have <code>URGENT_NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByUrgentName(String... values) {
        return fetch(EIdentity.E_IDENTITY.URGENT_NAME, values);
    }

    /**
     * Fetch records that have <code>URGENT_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByUrgentPhone(String... values) {
        return fetch(EIdentity.E_IDENTITY.URGENT_PHONE, values);
    }

    /**
     * Fetch records that have <code>EC_QQ IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByEcQq(String... values) {
        return fetch(EIdentity.E_IDENTITY.EC_QQ, values);
    }

    /**
     * Fetch records that have <code>EC_ALIPAY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByEcAlipay(String... values) {
        return fetch(EIdentity.E_IDENTITY.EC_ALIPAY, values);
    }

    /**
     * Fetch records that have <code>EC_WECHAT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByEcWechat(String... values) {
        return fetch(EIdentity.E_IDENTITY.EC_WECHAT, values);
    }

    /**
     * Fetch records that have <code>IDC_TYPE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcType(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_TYPE, values);
    }

    /**
     * Fetch records that have <code>IDC_NUMBER IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcNumber(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_NUMBER, values);
    }

    /**
     * Fetch records that have <code>IDC_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcAddress(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>IDC_EXPIRED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcExpiredAt(LocalDateTime... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_EXPIRED_AT, values);
    }

    /**
     * Fetch records that have <code>IDC_FRONT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcFront(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_FRONT, values);
    }

    /**
     * Fetch records that have <code>IDC_BACK IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcBack(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_BACK, values);
    }

    /**
     * Fetch records that have <code>IDC_ISSUER IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcIssuer(String... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_ISSUER, values);
    }

    /**
     * Fetch records that have <code>IDC_ISSUE_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByIdcIssueAt(LocalDateTime... values) {
        return fetch(EIdentity.E_IDENTITY.IDC_ISSUE_AT, values);
    }

    /**
     * Fetch records that have <code>VERIFIED IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByVerified(Boolean... values) {
        return fetch(EIdentity.E_IDENTITY.VERIFIED, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByMetadata(String... values) {
        return fetch(EIdentity.E_IDENTITY.METADATA, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByActive(Boolean... values) {
        return fetch(EIdentity.E_IDENTITY.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchBySigma(String... values) {
        return fetch(EIdentity.E_IDENTITY.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByLanguage(String... values) {
        return fetch(EIdentity.E_IDENTITY.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(EIdentity.E_IDENTITY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByCreatedBy(String... values) {
        return fetch(EIdentity.E_IDENTITY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(EIdentity.E_IDENTITY.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchByUpdatedBy(String... values) {
        return fetch(EIdentity.E_IDENTITY.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.erp.domain.tables.pojos.EIdentity> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CODE,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.TYPE,values);
    }

    /**
     * Fetch records that have <code>STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByStatusAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.STATUS,values);
    }

    /**
     * Fetch records that have <code>COUNTRY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByCountryAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.COUNTRY,values);
    }

    /**
     * Fetch records that have <code>NATIVE_PLACE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByNativePlaceAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.NATIVE_PLACE,values);
    }

    /**
     * Fetch records that have <code>NATION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByNationAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.NATION,values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByAddressAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.ADDRESS,values);
    }

    /**
     * Fetch records that have <code>REALNAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByRealnameAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.REALNAME,values);
    }

    /**
     * Fetch records that have <code>BIRTHDAY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByBirthdayAsync(List<LocalDateTime> values) {
        return fetchAsync(EIdentity.E_IDENTITY.BIRTHDAY,values);
    }

    /**
     * Fetch records that have <code>DRIVER_LICENSE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByDriverLicenseAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.DRIVER_LICENSE,values);
    }

    /**
     * Fetch records that have <code>CAR_PLATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByCarPlateAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CAR_PLATE,values);
    }

    /**
     * Fetch records that have <code>PASSPORT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByPassportAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.PASSPORT,values);
    }

    /**
     * Fetch records that have <code>GENDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByGenderAsync(List<Boolean> values) {
        return fetchAsync(EIdentity.E_IDENTITY.GENDER,values);
    }

    /**
     * Fetch records that have <code>MARITAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByMaritalAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.MARITAL,values);
    }

    /**
     * Fetch records that have <code>CONTACT_MOBILE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByContactMobileAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CONTACT_MOBILE,values);
    }

    /**
     * Fetch records that have <code>CONTACT_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByContactPhoneAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CONTACT_PHONE,values);
    }

    /**
     * Fetch records that have <code>CONTACT_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByContactAddressAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CONTACT_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>CONTACT_EMAIL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByContactEmailAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CONTACT_EMAIL,values);
    }

    /**
     * Fetch records that have <code>URGENT_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByUrgentNameAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.URGENT_NAME,values);
    }

    /**
     * Fetch records that have <code>URGENT_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByUrgentPhoneAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.URGENT_PHONE,values);
    }

    /**
     * Fetch records that have <code>EC_QQ IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByEcQqAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.EC_QQ,values);
    }

    /**
     * Fetch records that have <code>EC_ALIPAY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByEcAlipayAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.EC_ALIPAY,values);
    }

    /**
     * Fetch records that have <code>EC_WECHAT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByEcWechatAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.EC_WECHAT,values);
    }

    /**
     * Fetch records that have <code>IDC_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcTypeAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_TYPE,values);
    }

    /**
     * Fetch records that have <code>IDC_NUMBER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcNumberAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_NUMBER,values);
    }

    /**
     * Fetch records that have <code>IDC_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcAddressAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>IDC_EXPIRED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcExpiredAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_EXPIRED_AT,values);
    }

    /**
     * Fetch records that have <code>IDC_FRONT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcFrontAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_FRONT,values);
    }

    /**
     * Fetch records that have <code>IDC_BACK IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcBackAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_BACK,values);
    }

    /**
     * Fetch records that have <code>IDC_ISSUER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcIssuerAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_ISSUER,values);
    }

    /**
     * Fetch records that have <code>IDC_ISSUE_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByIdcIssueAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EIdentity.E_IDENTITY.IDC_ISSUE_AT,values);
    }

    /**
     * Fetch records that have <code>VERIFIED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByVerifiedAsync(List<Boolean> values) {
        return fetchAsync(EIdentity.E_IDENTITY.VERIFIED,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.METADATA,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(EIdentity.E_IDENTITY.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EIdentity.E_IDENTITY.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EIdentity>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(EIdentity.E_IDENTITY.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
