/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IEContract extends Serializable {

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.KEY</code>. 「key」- 合同主键
     */
    public IEContract setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.KEY</code>. 「key」- 合同主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.NAME</code>. 「name」- 合同名称
     */
    public IEContract setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.NAME</code>. 「name」- 合同名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.CODE</code>. 「code」- 合同编号
     */
    public IEContract setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.CODE</code>. 「code」- 合同编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.TITLE</code>. 「title」- 合同标题
     */
    public IEContract setTitle(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.TITLE</code>. 「title」- 合同标题
     */
    public String getTitle();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.FILE_KEY</code>. 「fileKey」- 合同附件Key
     */
    public IEContract setFileKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.FILE_KEY</code>. 「fileKey」- 合同附件Key
     */
    public String getFileKey();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.AMOUNT</code>. 「amount」- 合同金额
     */
    public IEContract setAmount(BigDecimal value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.AMOUNT</code>. 「amount」- 合同金额
     */
    public BigDecimal getAmount();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.COMPANY_ID</code>. 「companyId」- 合同甲方
     */
    public IEContract setCompanyId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.COMPANY_ID</code>. 「companyId」- 合同甲方
     */
    public String getCompanyId();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.CUSTOMER_ID</code>. 「customerId」- 合同乙方
     */
    public IEContract setCustomerId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.CUSTOMER_ID</code>. 「customerId」- 合同乙方
     */
    public String getCustomerId();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.EXPIRED_AT</code>. 「expiredAt」- 过期时间
     */
    public IEContract setExpiredAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.EXPIRED_AT</code>. 「expiredAt」- 过期时间
     */
    public LocalDateTime getExpiredAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.SIGNED_AT</code>. 「signedAt」- 签订时间
     */
    public IEContract setSignedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.SIGNED_AT</code>. 「signedAt」- 签订时间
     */
    public LocalDateTime getSignedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.RUN_AT</code>. 「runAt」- 生效时间
     */
    public IEContract setRunAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.RUN_AT</code>. 「runAt」- 生效时间
     */
    public LocalDateTime getRunAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.RUN_UP_AT</code>. 「runUpAt」- 挂账到期时间
     */
    public IEContract setRunUpAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.RUN_UP_AT</code>. 「runUpAt」- 挂账到期时间
     */
    public LocalDateTime getRunUpAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.A_NAME</code>. 「aName」- 甲方签订人
     */
    public IEContract setAName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.A_NAME</code>. 「aName」- 甲方签订人
     */
    public String getAName();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.A_PHONE</code>. 「aPhone」- 甲方签订人姓名
     */
    public IEContract setAPhone(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.A_PHONE</code>. 「aPhone」- 甲方签订人姓名
     */
    public String getAPhone();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.A_ADDRESS</code>. 「aAddress」- 甲方联系地址
     */
    public IEContract setAAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.A_ADDRESS</code>. 「aAddress」- 甲方联系地址
     */
    public String getAAddress();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.B_NAME</code>. 「bName」- 乙方签订人
     */
    public IEContract setBName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.B_NAME</code>. 「bName」- 乙方签订人
     */
    public String getBName();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.B_PHONE</code>. 「bPhone」- 乙方签订人姓名
     */
    public IEContract setBPhone(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.B_PHONE</code>. 「bPhone」- 乙方签订人姓名
     */
    public String getBPhone();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.B_ADDRESS</code>. 「bAddress」- 乙方联系地址
     */
    public IEContract setBAddress(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.B_ADDRESS</code>. 「bAddress」- 乙方联系地址
     */
    public String getBAddress();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.TYPE</code>. 「type」- 合同分类
     */
    public IEContract setType(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.TYPE</code>. 「type」- 合同分类
     */
    public String getType();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.METADATA</code>. 「metadata」- 附加配置
     */
    public IEContract setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.ACTIVE</code>. 「active」- 是否启用
     */
    public IEContract setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.SIGMA</code>. 「sigma」- 统一标识（公司所属应用）
     */
    public IEContract setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.SIGMA</code>. 「sigma」- 统一标识（公司所属应用）
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IEContract setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IEContract setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IEContract setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IEContract setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_CONTRACT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IEContract setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_CONTRACT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IEContract
     */
    public void from(cn.vertxup.erp.domain.tables.interfaces.IEContract from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IEContract
     */
    public <E extends cn.vertxup.erp.domain.tables.interfaces.IEContract> E into(E into);

    default IEContract fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setName(json.getString("NAME"));
        setCode(json.getString("CODE"));
        setTitle(json.getString("TITLE"));
        setFileKey(json.getString("FILE_KEY"));
        // Omitting unrecognized type java.math.BigDecimal for column AMOUNT!
        setCompanyId(json.getString("COMPANY_ID"));
        setCustomerId(json.getString("CUSTOMER_ID"));
        // Omitting unrecognized type java.time.LocalDateTime for column EXPIRED_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column SIGNED_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column RUN_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column RUN_UP_AT!
        setAName(json.getString("A_NAME"));
        setAPhone(json.getString("A_PHONE"));
        setAAddress(json.getString("A_ADDRESS"));
        setBName(json.getString("B_NAME"));
        setBPhone(json.getString("B_PHONE"));
        setBAddress(json.getString("B_ADDRESS"));
        setType(json.getString("TYPE"));
        setMetadata(json.getString("METADATA"));
        setActive(json.getBoolean("ACTIVE"));
        setSigma(json.getString("SIGMA"));
        setLanguage(json.getString("LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("NAME",getName());
        json.put("CODE",getCode());
        json.put("TITLE",getTitle());
        json.put("FILE_KEY",getFileKey());
        // Omitting unrecognized type java.math.BigDecimal for column AMOUNT!
        json.put("COMPANY_ID",getCompanyId());
        json.put("CUSTOMER_ID",getCustomerId());
        // Omitting unrecognized type java.time.LocalDateTime for column EXPIRED_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column SIGNED_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column RUN_AT!
        // Omitting unrecognized type java.time.LocalDateTime for column RUN_UP_AT!
        json.put("A_NAME",getAName());
        json.put("A_PHONE",getAPhone());
        json.put("A_ADDRESS",getAAddress());
        json.put("B_NAME",getBName());
        json.put("B_PHONE",getBPhone());
        json.put("B_ADDRESS",getBAddress());
        json.put("TYPE",getType());
        json.put("METADATA",getMetadata());
        json.put("ACTIVE",getActive());
        json.put("SIGMA",getSigma());
        json.put("LANGUAGE",getLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY",getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY",getUpdatedBy());
        return json;
    }

}
