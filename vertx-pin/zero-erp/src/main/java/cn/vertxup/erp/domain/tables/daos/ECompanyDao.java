/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.daos;


import cn.vertxup.erp.domain.tables.ECompany;
import cn.vertxup.erp.domain.tables.records.ECompanyRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ECompanyDao extends DAOImpl<ECompanyRecord, cn.vertxup.erp.domain.tables.pojos.ECompany, String> implements VertxDAO<cn.vertxup.erp.domain.tables.records.ECompanyRecord,cn.vertxup.erp.domain.tables.pojos.ECompany,java.lang.String> {

    /**
     * Create a new ECompanyDao without any configuration
     */
    public ECompanyDao() {
        super(ECompany.E_COMPANY, cn.vertxup.erp.domain.tables.pojos.ECompany.class);
    }

    /**
     * Create a new ECompanyDao with an attached configuration
     */
    public ECompanyDao(Configuration configuration) {
        super(ECompany.E_COMPANY, cn.vertxup.erp.domain.tables.pojos.ECompany.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.erp.domain.tables.pojos.ECompany object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByKey(String... values) {
        return fetch(ECompany.E_COMPANY.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.erp.domain.tables.pojos.ECompany fetchOneByKey(String value) {
        return fetchOne(ECompany.E_COMPANY.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByName(String... values) {
        return fetch(ECompany.E_COMPANY.NAME, values);
    }

    /**
     * Fetch records that have <code>ALIAS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByAlias(String... values) {
        return fetch(ECompany.E_COMPANY.ALIAS, values);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByTitle(String... values) {
        return fetch(ECompany.E_COMPANY.TITLE, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCode(String... values) {
        return fetch(ECompany.E_COMPANY.CODE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByComment(String... values) {
        return fetch(ECompany.E_COMPANY.COMMENT, values);
    }

    /**
     * Fetch records that have <code>TAX_CODE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByTaxCode(String... values) {
        return fetch(ECompany.E_COMPANY.TAX_CODE, values);
    }

    /**
     * Fetch records that have <code>TAX_TITLE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByTaxTitle(String... values) {
        return fetch(ECompany.E_COMPANY.TAX_TITLE, values);
    }

    /**
     * Fetch records that have <code>EMAIL IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByEmail(String... values) {
        return fetch(ECompany.E_COMPANY.EMAIL, values);
    }

    /**
     * Fetch records that have <code>FAX IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByFax(String... values) {
        return fetch(ECompany.E_COMPANY.FAX, values);
    }

    /**
     * Fetch records that have <code>HOMEPAGE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByHomepage(String... values) {
        return fetch(ECompany.E_COMPANY.HOMEPAGE, values);
    }

    /**
     * Fetch records that have <code>LOGO IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByLogo(String... values) {
        return fetch(ECompany.E_COMPANY.LOGO, values);
    }

    /**
     * Fetch records that have <code>PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByPhone(String... values) {
        return fetch(ECompany.E_COMPANY.PHONE, values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByAddress(String... values) {
        return fetch(ECompany.E_COMPANY.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>LOCATION_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByLocationId(String... values) {
        return fetch(ECompany.E_COMPANY.LOCATION_ID, values);
    }

    /**
     * Fetch records that have <code>CORPORATION_NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCorporationName(String... values) {
        return fetch(ECompany.E_COMPANY.CORPORATION_NAME, values);
    }

    /**
     * Fetch records that have <code>CORPORATION_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCorporationPhone(String... values) {
        return fetch(ECompany.E_COMPANY.CORPORATION_PHONE, values);
    }

    /**
     * Fetch records that have <code>CONTACT_NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByContactName(String... values) {
        return fetch(ECompany.E_COMPANY.CONTACT_NAME, values);
    }

    /**
     * Fetch records that have <code>CONTACT_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByContactPhone(String... values) {
        return fetch(ECompany.E_COMPANY.CONTACT_PHONE, values);
    }

    /**
     * Fetch records that have <code>CONTACT_ONLINE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByContactOnline(String... values) {
        return fetch(ECompany.E_COMPANY.CONTACT_ONLINE, values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCompanyId(String... values) {
        return fetch(ECompany.E_COMPANY.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCustomerId(String... values) {
        return fetch(ECompany.E_COMPANY.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByType(String... values) {
        return fetch(ECompany.E_COMPANY.TYPE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByMetadata(String... values) {
        return fetch(ECompany.E_COMPANY.METADATA, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByActive(Boolean... values) {
        return fetch(ECompany.E_COMPANY.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchBySigma(String... values) {
        return fetch(ECompany.E_COMPANY.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByLanguage(String... values) {
        return fetch(ECompany.E_COMPANY.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ECompany.E_COMPANY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByCreatedBy(String... values) {
        return fetch(ECompany.E_COMPANY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ECompany.E_COMPANY.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchByUpdatedBy(String... values) {
        return fetch(ECompany.E_COMPANY.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.erp.domain.tables.pojos.ECompany> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByNameAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.NAME,values);
    }

    /**
     * Fetch records that have <code>ALIAS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByAliasAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.ALIAS,values);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByTitleAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.TITLE,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CODE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.COMMENT,values);
    }

    /**
     * Fetch records that have <code>TAX_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByTaxCodeAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.TAX_CODE,values);
    }

    /**
     * Fetch records that have <code>TAX_TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByTaxTitleAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.TAX_TITLE,values);
    }

    /**
     * Fetch records that have <code>EMAIL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByEmailAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.EMAIL,values);
    }

    /**
     * Fetch records that have <code>FAX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByFaxAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.FAX,values);
    }

    /**
     * Fetch records that have <code>HOMEPAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByHomepageAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.HOMEPAGE,values);
    }

    /**
     * Fetch records that have <code>LOGO IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByLogoAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.LOGO,values);
    }

    /**
     * Fetch records that have <code>PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByPhoneAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.PHONE,values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByAddressAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.ADDRESS,values);
    }

    /**
     * Fetch records that have <code>LOCATION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByLocationIdAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.LOCATION_ID,values);
    }

    /**
     * Fetch records that have <code>CORPORATION_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCorporationNameAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CORPORATION_NAME,values);
    }

    /**
     * Fetch records that have <code>CORPORATION_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCorporationPhoneAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CORPORATION_PHONE,values);
    }

    /**
     * Fetch records that have <code>CONTACT_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByContactNameAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CONTACT_NAME,values);
    }

    /**
     * Fetch records that have <code>CONTACT_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByContactPhoneAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CONTACT_PHONE,values);
    }

    /**
     * Fetch records that have <code>CONTACT_ONLINE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByContactOnlineAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CONTACT_ONLINE,values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCompanyIdAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCustomerIdAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CUSTOMER_ID,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.TYPE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.METADATA,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(ECompany.E_COMPANY.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(ECompany.E_COMPANY.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(ECompany.E_COMPANY.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.ECompany>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(ECompany.E_COMPANY.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
