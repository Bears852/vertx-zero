/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.daos;


import cn.vertxup.erp.domain.tables.EContract;
import cn.vertxup.erp.domain.tables.records.EContractRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EContractDao extends DAOImpl<EContractRecord, cn.vertxup.erp.domain.tables.pojos.EContract, String> implements VertxDAO<cn.vertxup.erp.domain.tables.records.EContractRecord,cn.vertxup.erp.domain.tables.pojos.EContract,java.lang.String> {

    /**
     * Create a new EContractDao without any configuration
     */
    public EContractDao() {
        super(EContract.E_CONTRACT, cn.vertxup.erp.domain.tables.pojos.EContract.class);
    }

    /**
     * Create a new EContractDao with an attached configuration
     */
    public EContractDao(Configuration configuration) {
        super(EContract.E_CONTRACT, cn.vertxup.erp.domain.tables.pojos.EContract.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.erp.domain.tables.pojos.EContract object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByKey(String... values) {
        return fetch(EContract.E_CONTRACT.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.erp.domain.tables.pojos.EContract fetchOneByKey(String value) {
        return fetchOne(EContract.E_CONTRACT.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByName(String... values) {
        return fetch(EContract.E_CONTRACT.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByCode(String... values) {
        return fetch(EContract.E_CONTRACT.CODE, values);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByTitle(String... values) {
        return fetch(EContract.E_CONTRACT.TITLE, values);
    }

    /**
     * Fetch records that have <code>FILE_KEY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByFileKey(String... values) {
        return fetch(EContract.E_CONTRACT.FILE_KEY, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByAmount(BigDecimal... values) {
        return fetch(EContract.E_CONTRACT.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByCompanyId(String... values) {
        return fetch(EContract.E_CONTRACT.COMPANY_ID, values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByCustomerId(String... values) {
        return fetch(EContract.E_CONTRACT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByExpiredAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.EXPIRED_AT, values);
    }

    /**
     * Fetch records that have <code>SIGNED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchBySignedAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.SIGNED_AT, values);
    }

    /**
     * Fetch records that have <code>RUN_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByRunAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.RUN_AT, values);
    }

    /**
     * Fetch records that have <code>RUN_UP_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByRunUpAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.RUN_UP_AT, values);
    }

    /**
     * Fetch records that have <code>A_NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByAName(String... values) {
        return fetch(EContract.E_CONTRACT.A_NAME, values);
    }

    /**
     * Fetch records that have <code>A_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByAPhone(String... values) {
        return fetch(EContract.E_CONTRACT.A_PHONE, values);
    }

    /**
     * Fetch records that have <code>A_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByAAddress(String... values) {
        return fetch(EContract.E_CONTRACT.A_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>B_NAME IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByBName(String... values) {
        return fetch(EContract.E_CONTRACT.B_NAME, values);
    }

    /**
     * Fetch records that have <code>B_PHONE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByBPhone(String... values) {
        return fetch(EContract.E_CONTRACT.B_PHONE, values);
    }

    /**
     * Fetch records that have <code>B_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByBAddress(String... values) {
        return fetch(EContract.E_CONTRACT.B_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByType(String... values) {
        return fetch(EContract.E_CONTRACT.TYPE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByMetadata(String... values) {
        return fetch(EContract.E_CONTRACT.METADATA, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByActive(Boolean... values) {
        return fetch(EContract.E_CONTRACT.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchBySigma(String... values) {
        return fetch(EContract.E_CONTRACT.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByLanguage(String... values) {
        return fetch(EContract.E_CONTRACT.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByCreatedBy(String... values) {
        return fetch(EContract.E_CONTRACT.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(EContract.E_CONTRACT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.erp.domain.tables.pojos.EContract> fetchByUpdatedBy(String... values) {
        return fetch(EContract.E_CONTRACT.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.erp.domain.tables.pojos.EContract> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByNameAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.CODE,values);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByTitleAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.TITLE,values);
    }

    /**
     * Fetch records that have <code>FILE_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByFileKeyAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.FILE_KEY,values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByAmountAsync(List<BigDecimal> values) {
        return fetchAsync(EContract.E_CONTRACT.AMOUNT,values);
    }

    /**
     * Fetch records that have <code>COMPANY_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByCompanyIdAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.COMPANY_ID,values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByCustomerIdAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.CUSTOMER_ID,values);
    }

    /**
     * Fetch records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByExpiredAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.EXPIRED_AT,values);
    }

    /**
     * Fetch records that have <code>SIGNED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchBySignedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.SIGNED_AT,values);
    }

    /**
     * Fetch records that have <code>RUN_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByRunAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.RUN_AT,values);
    }

    /**
     * Fetch records that have <code>RUN_UP_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByRunUpAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.RUN_UP_AT,values);
    }

    /**
     * Fetch records that have <code>A_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByANameAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.A_NAME,values);
    }

    /**
     * Fetch records that have <code>A_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByAPhoneAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.A_PHONE,values);
    }

    /**
     * Fetch records that have <code>A_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByAAddressAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.A_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>B_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByBNameAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.B_NAME,values);
    }

    /**
     * Fetch records that have <code>B_PHONE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByBPhoneAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.B_PHONE,values);
    }

    /**
     * Fetch records that have <code>B_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByBAddressAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.B_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.TYPE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.METADATA,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(EContract.E_CONTRACT.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(EContract.E_CONTRACT.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.erp.domain.tables.pojos.EContract>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(EContract.E_CONTRACT.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
