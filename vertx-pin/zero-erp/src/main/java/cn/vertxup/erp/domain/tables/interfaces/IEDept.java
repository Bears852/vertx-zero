/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IEDept extends Serializable {

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.KEY</code>. 「key」- 部门主键
     */
    public IEDept setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.KEY</code>. 「key」- 部门主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.NAME</code>. 「name」- 部门名称
     */
    public IEDept setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.NAME</code>. 「name」- 部门名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.CODE</code>. 「code」- 部门编号
     */
    public IEDept setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.CODE</code>. 「code」- 部门编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.MANAGER_ID</code>. 「managerId」- 部门经理
     */
    public IEDept setManagerId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.MANAGER_ID</code>. 「managerId」- 部门经理
     */
    public String getManagerId();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.MANAGER_NAME</code>. 「managerName」- 部门名称
     */
    public IEDept setManagerName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.MANAGER_NAME</code>. 「managerName」- 部门名称
     */
    public String getManagerName();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.COMPANY_ID</code>. 「companyId」- 所属公司
     */
    public IEDept setCompanyId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.COMPANY_ID</code>. 「companyId」- 所属公司
     */
    public String getCompanyId();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.DEPT_ID</code>. 「deptId」- 父部门
     */
    public IEDept setDeptId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.DEPT_ID</code>. 「deptId」- 父部门
     */
    public String getDeptId();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.COMMENT</code>. 「comment」- 部门备注
     */
    public IEDept setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.COMMENT</code>. 「comment」- 部门备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.METADATA</code>. 「metadata」- 附加配置
     */
    public IEDept setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.ACTIVE</code>. 「active」- 是否启用
     */
    public IEDept setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.SIGMA</code>. 「sigma」- 统一标识
     */
    public IEDept setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IEDept setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IEDept setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IEDept setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IEDept setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_DEPT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IEDept setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_DEPT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IEDept
     */
    public void from(cn.vertxup.erp.domain.tables.interfaces.IEDept from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IEDept
     */
    public <E extends cn.vertxup.erp.domain.tables.interfaces.IEDept> E into(E into);

    default IEDept fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setName(json.getString("NAME"));
        setCode(json.getString("CODE"));
        setManagerId(json.getString("MANAGER_ID"));
        setManagerName(json.getString("MANAGER_NAME"));
        setCompanyId(json.getString("COMPANY_ID"));
        setDeptId(json.getString("DEPT_ID"));
        setComment(json.getString("COMMENT"));
        setMetadata(json.getString("METADATA"));
        setActive(json.getBoolean("ACTIVE"));
        setSigma(json.getString("SIGMA"));
        setLanguage(json.getString("LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("NAME",getName());
        json.put("CODE",getCode());
        json.put("MANAGER_ID",getManagerId());
        json.put("MANAGER_NAME",getManagerName());
        json.put("COMPANY_ID",getCompanyId());
        json.put("DEPT_ID",getDeptId());
        json.put("COMMENT",getComment());
        json.put("METADATA",getMetadata());
        json.put("ACTIVE",getActive());
        json.put("SIGMA",getSigma());
        json.put("LANGUAGE",getLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY",getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY",getUpdatedBy());
        return json;
    }

}
