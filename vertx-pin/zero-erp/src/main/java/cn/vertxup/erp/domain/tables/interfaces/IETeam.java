/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.erp.domain.tables.interfaces;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IETeam extends Serializable {

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.KEY</code>. 「key」- 组主键
     */
    public IETeam setKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.KEY</code>. 「key」- 组主键
     */
    public String getKey();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.NAME</code>. 「name」- 组名称
     */
    public IETeam setName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.NAME</code>. 「name」- 组名称
     */
    public String getName();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.CODE</code>. 「code」- 组编号
     */
    public IETeam setCode(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.CODE</code>. 「code」- 组编号
     */
    public String getCode();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.LEADER_ID</code>. 「leaderId」- 组长
     */
    public IETeam setLeaderId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.LEADER_ID</code>. 「leaderId」- 组长
     */
    public String getLeaderId();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.LEADER_NAME</code>. 「leaderName」- 组长姓名
     */
    public IETeam setLeaderName(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.LEADER_NAME</code>. 「leaderName」- 组长姓名
     */
    public String getLeaderName();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.DEPT_ID</code>. 「deptId」- 所属部门
     */
    public IETeam setDeptId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.DEPT_ID</code>. 「deptId」- 所属部门
     */
    public String getDeptId();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.TEAM_ID</code>. 「teamId」- 父组ID
     */
    public IETeam setTeamId(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.TEAM_ID</code>. 「teamId」- 父组ID
     */
    public String getTeamId();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.COMMENT</code>. 「comment」- 组备注
     */
    public IETeam setComment(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.COMMENT</code>. 「comment」- 组备注
     */
    public String getComment();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.METADATA</code>. 「metadata」- 附加配置
     */
    public IETeam setMetadata(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.ACTIVE</code>. 「active」- 是否启用
     */
    public IETeam setActive(Boolean value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.SIGMA</code>. 「sigma」- 统一标识
     */
    public IETeam setSigma(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IETeam setLanguage(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IETeam setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IETeam setCreatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IETeam setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>DB_ETERNAL.E_TEAM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IETeam setUpdatedBy(String value);

    /**
     * Getter for <code>DB_ETERNAL.E_TEAM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IETeam
     */
    public void from(cn.vertxup.erp.domain.tables.interfaces.IETeam from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IETeam
     */
    public <E extends cn.vertxup.erp.domain.tables.interfaces.IETeam> E into(E into);

    default IETeam fromJson(io.vertx.core.json.JsonObject json) {
        setKey(json.getString("KEY"));
        setName(json.getString("NAME"));
        setCode(json.getString("CODE"));
        setLeaderId(json.getString("LEADER_ID"));
        setLeaderName(json.getString("LEADER_NAME"));
        setDeptId(json.getString("DEPT_ID"));
        setTeamId(json.getString("TEAM_ID"));
        setComment(json.getString("COMMENT"));
        setMetadata(json.getString("METADATA"));
        setActive(json.getBoolean("ACTIVE"));
        setSigma(json.getString("SIGMA"));
        setLanguage(json.getString("LANGUAGE"));
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        setCreatedBy(json.getString("CREATED_BY"));
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        setUpdatedBy(json.getString("UPDATED_BY"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY",getKey());
        json.put("NAME",getName());
        json.put("CODE",getCode());
        json.put("LEADER_ID",getLeaderId());
        json.put("LEADER_NAME",getLeaderName());
        json.put("DEPT_ID",getDeptId());
        json.put("TEAM_ID",getTeamId());
        json.put("COMMENT",getComment());
        json.put("METADATA",getMetadata());
        json.put("ACTIVE",getActive());
        json.put("SIGMA",getSigma());
        json.put("LANGUAGE",getLanguage());
        // Omitting unrecognized type java.time.LocalDateTime for column CREATED_AT!
        json.put("CREATED_BY",getCreatedBy());
        // Omitting unrecognized type java.time.LocalDateTime for column UPDATED_AT!
        json.put("UPDATED_BY",getUpdatedBy());
        return json;
    }

}
