/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.jet.domain.tables.daos;


import cn.vertxup.jet.domain.tables.IJob;
import cn.vertxup.jet.domain.tables.records.IJobRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IJobDao extends DAOImpl<IJobRecord, cn.vertxup.jet.domain.tables.pojos.IJob, String> implements VertxDAO<cn.vertxup.jet.domain.tables.records.IJobRecord,cn.vertxup.jet.domain.tables.pojos.IJob,java.lang.String> {

    /**
     * Create a new IJobDao without any configuration
     */
    public IJobDao() {
        super(IJob.I_JOB, cn.vertxup.jet.domain.tables.pojos.IJob.class);
    }

    /**
     * Create a new IJobDao with an attached configuration
     */
    public IJobDao(Configuration configuration) {
        super(IJob.I_JOB, cn.vertxup.jet.domain.tables.pojos.IJob.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.jet.domain.tables.pojos.IJob object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByKey(String... values) {
        return fetch(IJob.I_JOB.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.jet.domain.tables.pojos.IJob fetchOneByKey(String value) {
        return fetchOne(IJob.I_JOB.KEY, value);
    }

    /**
     * Fetch records that have <code>NAMESPACE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByNamespace(String... values) {
        return fetch(IJob.I_JOB.NAMESPACE, values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByName(String... values) {
        return fetch(IJob.I_JOB.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByCode(String... values) {
        return fetch(IJob.I_JOB.CODE, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByType(String... values) {
        return fetch(IJob.I_JOB.TYPE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByComment(String... values) {
        return fetch(IJob.I_JOB.COMMENT, values);
    }

    /**
     * Fetch records that have <code>ADDITIONAL IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByAdditional(String... values) {
        return fetch(IJob.I_JOB.ADDITIONAL, values);
    }

    /**
     * Fetch records that have <code>RUN_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByRunAt(LocalTime... values) {
        return fetch(IJob.I_JOB.RUN_AT, values);
    }

    /**
     * Fetch records that have <code>DURATION IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByDuration(Long... values) {
        return fetch(IJob.I_JOB.DURATION, values);
    }

    /**
     * Fetch records that have <code>PROXY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByProxy(String... values) {
        return fetch(IJob.I_JOB.PROXY, values);
    }

    /**
     * Fetch records that have <code>THRESHOLD IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByThreshold(Integer... values) {
        return fetch(IJob.I_JOB.THRESHOLD, values);
    }

    /**
     * Fetch records that have <code>INCOME_COMPONENT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByIncomeComponent(String... values) {
        return fetch(IJob.I_JOB.INCOME_COMPONENT, values);
    }

    /**
     * Fetch records that have <code>INCOME_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByIncomeAddress(String... values) {
        return fetch(IJob.I_JOB.INCOME_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>OUTCOME_COMPONENT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByOutcomeComponent(String... values) {
        return fetch(IJob.I_JOB.OUTCOME_COMPONENT, values);
    }

    /**
     * Fetch records that have <code>OUTCOME_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByOutcomeAddress(String... values) {
        return fetch(IJob.I_JOB.OUTCOME_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>SERVICE_ID IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByServiceId(String... values) {
        return fetch(IJob.I_JOB.SERVICE_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchBySigma(String... values) {
        return fetch(IJob.I_JOB.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByLanguage(String... values) {
        return fetch(IJob.I_JOB.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByActive(Boolean... values) {
        return fetch(IJob.I_JOB.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByMetadata(String... values) {
        return fetch(IJob.I_JOB.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(IJob.I_JOB.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByCreatedBy(String... values) {
        return fetch(IJob.I_JOB.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(IJob.I_JOB.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IJob> fetchByUpdatedBy(String... values) {
        return fetch(IJob.I_JOB.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.jet.domain.tables.pojos.IJob> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAMESPACE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByNamespaceAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.NAMESPACE,values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByNameAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.CODE,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.TYPE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.COMMENT,values);
    }

    /**
     * Fetch records that have <code>ADDITIONAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByAdditionalAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.ADDITIONAL,values);
    }

    /**
     * Fetch records that have <code>RUN_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByRunAtAsync(List<LocalTime> values) {
        return fetchAsync(IJob.I_JOB.RUN_AT,values);
    }

    /**
     * Fetch records that have <code>DURATION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByDurationAsync(List<Long> values) {
        return fetchAsync(IJob.I_JOB.DURATION,values);
    }

    /**
     * Fetch records that have <code>PROXY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByProxyAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.PROXY,values);
    }

    /**
     * Fetch records that have <code>THRESHOLD IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByThresholdAsync(List<Integer> values) {
        return fetchAsync(IJob.I_JOB.THRESHOLD,values);
    }

    /**
     * Fetch records that have <code>INCOME_COMPONENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByIncomeComponentAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.INCOME_COMPONENT,values);
    }

    /**
     * Fetch records that have <code>INCOME_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByIncomeAddressAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.INCOME_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>OUTCOME_COMPONENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByOutcomeComponentAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.OUTCOME_COMPONENT,values);
    }

    /**
     * Fetch records that have <code>OUTCOME_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByOutcomeAddressAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.OUTCOME_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>SERVICE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByServiceIdAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.SERVICE_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(IJob.I_JOB.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IJob.I_JOB.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IJob.I_JOB.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IJob>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(IJob.I_JOB.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
