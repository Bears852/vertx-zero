/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.jet.domain.tables.daos;


import cn.vertxup.jet.domain.tables.IApi;
import cn.vertxup.jet.domain.tables.records.IApiRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IApiDao extends DAOImpl<IApiRecord, cn.vertxup.jet.domain.tables.pojos.IApi, String> implements VertxDAO<cn.vertxup.jet.domain.tables.records.IApiRecord,cn.vertxup.jet.domain.tables.pojos.IApi,java.lang.String> {

    /**
     * Create a new IApiDao without any configuration
     */
    public IApiDao() {
        super(IApi.I_API, cn.vertxup.jet.domain.tables.pojos.IApi.class);
    }

    /**
     * Create a new IApiDao with an attached configuration
     */
    public IApiDao(Configuration configuration) {
        super(IApi.I_API, cn.vertxup.jet.domain.tables.pojos.IApi.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.jet.domain.tables.pojos.IApi object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByKey(String... values) {
        return fetch(IApi.I_API.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.jet.domain.tables.pojos.IApi fetchOneByKey(String value) {
        return fetchOne(IApi.I_API.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByName(String... values) {
        return fetch(IApi.I_API.NAME, values);
    }

    /**
     * Fetch records that have <code>URI IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByUri(String... values) {
        return fetch(IApi.I_API.URI, values);
    }

    /**
     * Fetch records that have <code>METHOD IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByMethod(String... values) {
        return fetch(IApi.I_API.METHOD, values);
    }

    /**
     * Fetch records that have <code>CONSUMES IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByConsumes(String... values) {
        return fetch(IApi.I_API.CONSUMES, values);
    }

    /**
     * Fetch records that have <code>PRODUCES IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByProduces(String... values) {
        return fetch(IApi.I_API.PRODUCES, values);
    }

    /**
     * Fetch records that have <code>SECURE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchBySecure(Boolean... values) {
        return fetch(IApi.I_API.SECURE, values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByComment(String... values) {
        return fetch(IApi.I_API.COMMENT, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByType(String... values) {
        return fetch(IApi.I_API.TYPE, values);
    }

    /**
     * Fetch records that have <code>PARAM_MODE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByParamMode(String... values) {
        return fetch(IApi.I_API.PARAM_MODE, values);
    }

    /**
     * Fetch records that have <code>PARAM_REQUIRED IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByParamRequired(String... values) {
        return fetch(IApi.I_API.PARAM_REQUIRED, values);
    }

    /**
     * Fetch records that have <code>PARAM_CONTAINED IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByParamContained(String... values) {
        return fetch(IApi.I_API.PARAM_CONTAINED, values);
    }

    /**
     * Fetch records that have <code>IN_RULE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByInRule(String... values) {
        return fetch(IApi.I_API.IN_RULE, values);
    }

    /**
     * Fetch records that have <code>IN_MAPPING IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByInMapping(String... values) {
        return fetch(IApi.I_API.IN_MAPPING, values);
    }

    /**
     * Fetch records that have <code>IN_PLUG IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByInPlug(String... values) {
        return fetch(IApi.I_API.IN_PLUG, values);
    }

    /**
     * Fetch records that have <code>IN_SCRIPT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByInScript(String... values) {
        return fetch(IApi.I_API.IN_SCRIPT, values);
    }

    /**
     * Fetch records that have <code>OUT_WRITER IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByOutWriter(String... values) {
        return fetch(IApi.I_API.OUT_WRITER, values);
    }

    /**
     * Fetch records that have <code>WORKER_TYPE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByWorkerType(String... values) {
        return fetch(IApi.I_API.WORKER_TYPE, values);
    }

    /**
     * Fetch records that have <code>WORKER_ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByWorkerAddress(String... values) {
        return fetch(IApi.I_API.WORKER_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>WORKER_CONSUMER IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByWorkerConsumer(String... values) {
        return fetch(IApi.I_API.WORKER_CONSUMER, values);
    }

    /**
     * Fetch records that have <code>WORKER_CLASS IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByWorkerClass(String... values) {
        return fetch(IApi.I_API.WORKER_CLASS, values);
    }

    /**
     * Fetch records that have <code>WORKER_JS IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByWorkerJs(String... values) {
        return fetch(IApi.I_API.WORKER_JS, values);
    }

    /**
     * Fetch records that have <code>SERVICE_ID IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByServiceId(String... values) {
        return fetch(IApi.I_API.SERVICE_ID, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchBySigma(String... values) {
        return fetch(IApi.I_API.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByLanguage(String... values) {
        return fetch(IApi.I_API.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByActive(Boolean... values) {
        return fetch(IApi.I_API.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByMetadata(String... values) {
        return fetch(IApi.I_API.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(IApi.I_API.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByCreatedBy(String... values) {
        return fetch(IApi.I_API.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(IApi.I_API.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.jet.domain.tables.pojos.IApi> fetchByUpdatedBy(String... values) {
        return fetch(IApi.I_API.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(IApi.I_API.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.jet.domain.tables.pojos.IApi> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByNameAsync(List<String> values) {
        return fetchAsync(IApi.I_API.NAME,values);
    }

    /**
     * Fetch records that have <code>URI IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByUriAsync(List<String> values) {
        return fetchAsync(IApi.I_API.URI,values);
    }

    /**
     * Fetch records that have <code>METHOD IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByMethodAsync(List<String> values) {
        return fetchAsync(IApi.I_API.METHOD,values);
    }

    /**
     * Fetch records that have <code>CONSUMES IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByConsumesAsync(List<String> values) {
        return fetchAsync(IApi.I_API.CONSUMES,values);
    }

    /**
     * Fetch records that have <code>PRODUCES IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByProducesAsync(List<String> values) {
        return fetchAsync(IApi.I_API.PRODUCES,values);
    }

    /**
     * Fetch records that have <code>SECURE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchBySecureAsync(List<Boolean> values) {
        return fetchAsync(IApi.I_API.SECURE,values);
    }

    /**
     * Fetch records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByCommentAsync(List<String> values) {
        return fetchAsync(IApi.I_API.COMMENT,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(IApi.I_API.TYPE,values);
    }

    /**
     * Fetch records that have <code>PARAM_MODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByParamModeAsync(List<String> values) {
        return fetchAsync(IApi.I_API.PARAM_MODE,values);
    }

    /**
     * Fetch records that have <code>PARAM_REQUIRED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByParamRequiredAsync(List<String> values) {
        return fetchAsync(IApi.I_API.PARAM_REQUIRED,values);
    }

    /**
     * Fetch records that have <code>PARAM_CONTAINED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByParamContainedAsync(List<String> values) {
        return fetchAsync(IApi.I_API.PARAM_CONTAINED,values);
    }

    /**
     * Fetch records that have <code>IN_RULE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByInRuleAsync(List<String> values) {
        return fetchAsync(IApi.I_API.IN_RULE,values);
    }

    /**
     * Fetch records that have <code>IN_MAPPING IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByInMappingAsync(List<String> values) {
        return fetchAsync(IApi.I_API.IN_MAPPING,values);
    }

    /**
     * Fetch records that have <code>IN_PLUG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByInPlugAsync(List<String> values) {
        return fetchAsync(IApi.I_API.IN_PLUG,values);
    }

    /**
     * Fetch records that have <code>IN_SCRIPT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByInScriptAsync(List<String> values) {
        return fetchAsync(IApi.I_API.IN_SCRIPT,values);
    }

    /**
     * Fetch records that have <code>OUT_WRITER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByOutWriterAsync(List<String> values) {
        return fetchAsync(IApi.I_API.OUT_WRITER,values);
    }

    /**
     * Fetch records that have <code>WORKER_TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByWorkerTypeAsync(List<String> values) {
        return fetchAsync(IApi.I_API.WORKER_TYPE,values);
    }

    /**
     * Fetch records that have <code>WORKER_ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByWorkerAddressAsync(List<String> values) {
        return fetchAsync(IApi.I_API.WORKER_ADDRESS,values);
    }

    /**
     * Fetch records that have <code>WORKER_CONSUMER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByWorkerConsumerAsync(List<String> values) {
        return fetchAsync(IApi.I_API.WORKER_CONSUMER,values);
    }

    /**
     * Fetch records that have <code>WORKER_CLASS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByWorkerClassAsync(List<String> values) {
        return fetchAsync(IApi.I_API.WORKER_CLASS,values);
    }

    /**
     * Fetch records that have <code>WORKER_JS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByWorkerJsAsync(List<String> values) {
        return fetchAsync(IApi.I_API.WORKER_JS,values);
    }

    /**
     * Fetch records that have <code>SERVICE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByServiceIdAsync(List<String> values) {
        return fetchAsync(IApi.I_API.SERVICE_ID,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(IApi.I_API.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(IApi.I_API.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(IApi.I_API.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(IApi.I_API.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IApi.I_API.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(IApi.I_API.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(IApi.I_API.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.jet.domain.tables.pojos.IApi>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(IApi.I_API.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
