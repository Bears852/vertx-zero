/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.lbs.domain.tables.daos;


import cn.vertxup.lbs.domain.tables.LLocation;
import cn.vertxup.lbs.domain.tables.records.LLocationRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LLocationDao extends DAOImpl<LLocationRecord, cn.vertxup.lbs.domain.tables.pojos.LLocation, String> implements VertxDAO<cn.vertxup.lbs.domain.tables.records.LLocationRecord,cn.vertxup.lbs.domain.tables.pojos.LLocation,java.lang.String> {

    /**
     * Create a new LLocationDao without any configuration
     */
    public LLocationDao() {
        super(LLocation.L_LOCATION, cn.vertxup.lbs.domain.tables.pojos.LLocation.class);
    }

    /**
     * Create a new LLocationDao with an attached configuration
     */
    public LLocationDao(Configuration configuration) {
        super(LLocation.L_LOCATION, cn.vertxup.lbs.domain.tables.pojos.LLocation.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.lbs.domain.tables.pojos.LLocation object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByKey(String... values) {
        return fetch(LLocation.L_LOCATION.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.lbs.domain.tables.pojos.LLocation fetchOneByKey(String value) {
        return fetchOne(LLocation.L_LOCATION.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByName(String... values) {
        return fetch(LLocation.L_LOCATION.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByCode(String... values) {
        return fetch(LLocation.L_LOCATION.CODE, values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByAddress(String... values) {
        return fetch(LLocation.L_LOCATION.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>CITY IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByCity(String... values) {
        return fetch(LLocation.L_LOCATION.CITY, values);
    }

    /**
     * Fetch records that have <code>COUNTRY IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByCountry(String... values) {
        return fetch(LLocation.L_LOCATION.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>REGION IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByRegion(String... values) {
        return fetch(LLocation.L_LOCATION.REGION, values);
    }

    /**
     * Fetch records that have <code>FULL_NAME IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByFullName(String... values) {
        return fetch(LLocation.L_LOCATION.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>STATE IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByState(String... values) {
        return fetch(LLocation.L_LOCATION.STATE, values);
    }

    /**
     * Fetch records that have <code>STREET1 IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByStreet1(String... values) {
        return fetch(LLocation.L_LOCATION.STREET1, values);
    }

    /**
     * Fetch records that have <code>STREET2 IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByStreet2(String... values) {
        return fetch(LLocation.L_LOCATION.STREET2, values);
    }

    /**
     * Fetch records that have <code>STREET3 IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByStreet3(String... values) {
        return fetch(LLocation.L_LOCATION.STREET3, values);
    }

    /**
     * Fetch records that have <code>POSTAL IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByPostal(String... values) {
        return fetch(LLocation.L_LOCATION.POSTAL, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByMetadata(String... values) {
        return fetch(LLocation.L_LOCATION.METADATA, values);
    }

    /**
     * Fetch records that have <code>REGION_ID IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByRegionId(String... values) {
        return fetch(LLocation.L_LOCATION.REGION_ID, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByActive(Boolean... values) {
        return fetch(LLocation.L_LOCATION.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchBySigma(String... values) {
        return fetch(LLocation.L_LOCATION.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByLanguage(String... values) {
        return fetch(LLocation.L_LOCATION.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(LLocation.L_LOCATION.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByCreatedBy(String... values) {
        return fetch(LLocation.L_LOCATION.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(LLocation.L_LOCATION.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchByUpdatedBy(String... values) {
        return fetch(LLocation.L_LOCATION.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.lbs.domain.tables.pojos.LLocation> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByNameAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.CODE,values);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByAddressAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.ADDRESS,values);
    }

    /**
     * Fetch records that have <code>CITY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByCityAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.CITY,values);
    }

    /**
     * Fetch records that have <code>COUNTRY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByCountryAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.COUNTRY,values);
    }

    /**
     * Fetch records that have <code>REGION IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByRegionAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.REGION,values);
    }

    /**
     * Fetch records that have <code>FULL_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByFullNameAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.FULL_NAME,values);
    }

    /**
     * Fetch records that have <code>STATE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByStateAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.STATE,values);
    }

    /**
     * Fetch records that have <code>STREET1 IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByStreet1Async(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.STREET1,values);
    }

    /**
     * Fetch records that have <code>STREET2 IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByStreet2Async(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.STREET2,values);
    }

    /**
     * Fetch records that have <code>STREET3 IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByStreet3Async(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.STREET3,values);
    }

    /**
     * Fetch records that have <code>POSTAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByPostalAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.POSTAL,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.METADATA,values);
    }

    /**
     * Fetch records that have <code>REGION_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByRegionIdAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.REGION_ID,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(LLocation.L_LOCATION.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(LLocation.L_LOCATION.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(LLocation.L_LOCATION.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.lbs.domain.tables.pojos.LLocation>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(LLocation.L_LOCATION.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
