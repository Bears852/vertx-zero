/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.lbs.domain.tables;


import cn.vertxup.lbs.domain.Db;
import cn.vertxup.lbs.domain.Indexes;
import cn.vertxup.lbs.domain.Keys;
import cn.vertxup.lbs.domain.tables.records.LCountryRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LCountry extends TableImpl<LCountryRecord> {

    /**
     * The reference instance of <code>DB_ETERNAL.L_COUNTRY</code>
     */
    public static final LCountry L_COUNTRY = new LCountry();
    private static final long serialVersionUID = -2006874874;
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.KEY</code>. 「key」- 国家主键
     */
    public final TableField<LCountryRecord, String> KEY = createField("KEY", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「key」- 国家主键");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.NAME</code>. 「name」- 国家名称
     */
    public final TableField<LCountryRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "「name」- 国家名称");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.CODE</code>. 「code」- 国家编号
     */
    public final TableField<LCountryRecord, String> CODE = createField("CODE", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「code」- 国家编号");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.FLAG</code>. 「flag」- 国旗
     */
    public final TableField<LCountryRecord, String> FLAG = createField("FLAG", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "「flag」- 国旗");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.PHONE_PREFIX</code>. 「phonePrefix」- 电话前缀
     */
    public final TableField<LCountryRecord, String> PHONE_PREFIX = createField("PHONE_PREFIX", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "「phonePrefix」- 电话前缀");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.CURRENCY</code>. 「currency」- 使用货币
     */
    public final TableField<LCountryRecord, String> CURRENCY = createField("CURRENCY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「currency」- 使用货币");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.METADATA</code>. 「metadata」- 附加配置
     */
    public final TableField<LCountryRecord, String> METADATA = createField("METADATA", org.jooq.impl.SQLDataType.CLOB, this, "「metadata」- 附加配置");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.ORDER</code>. 「order」- 排序
     */
    public final TableField<LCountryRecord, Integer> ORDER = createField("ORDER", org.jooq.impl.SQLDataType.INTEGER, this, "「order」- 排序");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.ACTIVE</code>. 「active」- 是否启用
     */
    public final TableField<LCountryRecord, Boolean> ACTIVE = createField("ACTIVE", org.jooq.impl.SQLDataType.BIT, this, "「active」- 是否启用");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.SIGMA</code>. 「sigma」- 统一标识
     */
    public final TableField<LCountryRecord, String> SIGMA = createField("SIGMA", org.jooq.impl.SQLDataType.VARCHAR(32), this, "「sigma」- 统一标识");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.LANGUAGE</code>. 「language」- 使用的语言
     */
    public final TableField<LCountryRecord, String> LANGUAGE = createField("LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR(8), this, "「language」- 使用的语言");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public final TableField<LCountryRecord, LocalDateTime> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「createdAt」- 创建时间");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public final TableField<LCountryRecord, String> CREATED_BY = createField("CREATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「createdBy」- 创建人");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public final TableField<LCountryRecord, LocalDateTime> UPDATED_AT = createField("UPDATED_AT", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "「updatedAt」- 更新时间");
    /**
     * The column <code>DB_ETERNAL.L_COUNTRY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public final TableField<LCountryRecord, String> UPDATED_BY = createField("UPDATED_BY", org.jooq.impl.SQLDataType.VARCHAR(36), this, "「updatedBy」- 更新人");

    /**
     * Create a <code>DB_ETERNAL.L_COUNTRY</code> table reference
     */
    public LCountry() {
        this(DSL.name("L_COUNTRY"), null);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.L_COUNTRY</code> table reference
     */
    public LCountry(String alias) {
        this(DSL.name(alias), L_COUNTRY);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.L_COUNTRY</code> table reference
     */
    public LCountry(Name alias) {
        this(alias, L_COUNTRY);
    }

    private LCountry(Name alias, Table<LCountryRecord> aliased) {
        this(alias, aliased, null);
    }

    private LCountry(Name alias, Table<LCountryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LCountryRecord> getRecordType() {
        return LCountryRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB_ETERNAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.L_COUNTRY_CODE, Indexes.L_COUNTRY_PHONE_PREFIX, Indexes.L_COUNTRY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LCountryRecord> getPrimaryKey() {
        return Keys.KEY_L_COUNTRY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LCountryRecord>> getKeys() {
        return Arrays.<UniqueKey<LCountryRecord>>asList(Keys.KEY_L_COUNTRY_PRIMARY, Keys.KEY_L_COUNTRY_CODE, Keys.KEY_L_COUNTRY_PHONE_PREFIX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LCountry as(String alias) {
        return new LCountry(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LCountry as(Name alias) {
        return new LCountry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LCountry rename(String name) {
        return new LCountry(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LCountry rename(Name name) {
        return new LCountry(name, null);
    }
}
