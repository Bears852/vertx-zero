/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.graphic.domain.tables.daos;


import cn.vertxup.graphic.domain.tables.GEdge;
import cn.vertxup.graphic.domain.tables.records.GEdgeRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GEdgeDao extends DAOImpl<GEdgeRecord, cn.vertxup.graphic.domain.tables.pojos.GEdge, String> implements VertxDAO<cn.vertxup.graphic.domain.tables.records.GEdgeRecord,cn.vertxup.graphic.domain.tables.pojos.GEdge,java.lang.String> {

    /**
     * Create a new GEdgeDao without any configuration
     */
    public GEdgeDao() {
        super(GEdge.G_EDGE, cn.vertxup.graphic.domain.tables.pojos.GEdge.class);
    }

    /**
     * Create a new GEdgeDao with an attached configuration
     */
    public GEdgeDao(Configuration configuration) {
        super(GEdge.G_EDGE, cn.vertxup.graphic.domain.tables.pojos.GEdge.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.graphic.domain.tables.pojos.GEdge object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByKey(String... values) {
        return fetch(GEdge.G_EDGE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.graphic.domain.tables.pojos.GEdge fetchOneByKey(String value) {
        return fetchOne(GEdge.G_EDGE.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByName(String... values) {
        return fetch(GEdge.G_EDGE.NAME, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByType(String... values) {
        return fetch(GEdge.G_EDGE.TYPE, values);
    }

    /**
     * Fetch records that have <code>SOURCE_KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchBySourceKey(String... values) {
        return fetch(GEdge.G_EDGE.SOURCE_KEY, values);
    }

    /**
     * Fetch records that have <code>TARGET_KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByTargetKey(String... values) {
        return fetch(GEdge.G_EDGE.TARGET_KEY, values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByGraphicId(String... values) {
        return fetch(GEdge.G_EDGE.GRAPHIC_ID, values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByUi(String... values) {
        return fetch(GEdge.G_EDGE.UI, values);
    }

    /**
     * Fetch records that have <code>RECORD_KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByRecordKey(String... values) {
        return fetch(GEdge.G_EDGE.RECORD_KEY, values);
    }

    /**
     * Fetch records that have <code>RECORD_DATA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByRecordData(String... values) {
        return fetch(GEdge.G_EDGE.RECORD_DATA, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchBySigma(String... values) {
        return fetch(GEdge.G_EDGE.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByLanguage(String... values) {
        return fetch(GEdge.G_EDGE.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByActive(Boolean... values) {
        return fetch(GEdge.G_EDGE.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByMetadata(String... values) {
        return fetch(GEdge.G_EDGE.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(GEdge.G_EDGE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByCreatedBy(String... values) {
        return fetch(GEdge.G_EDGE.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(GEdge.G_EDGE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchByUpdatedBy(String... values) {
        return fetch(GEdge.G_EDGE.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.graphic.domain.tables.pojos.GEdge> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByNameAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.NAME,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.TYPE,values);
    }

    /**
     * Fetch records that have <code>SOURCE_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchBySourceKeyAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.SOURCE_KEY,values);
    }

    /**
     * Fetch records that have <code>TARGET_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByTargetKeyAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.TARGET_KEY,values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByGraphicIdAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.GRAPHIC_ID,values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByUiAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.UI,values);
    }

    /**
     * Fetch records that have <code>RECORD_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByRecordKeyAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.RECORD_KEY,values);
    }

    /**
     * Fetch records that have <code>RECORD_DATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByRecordDataAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.RECORD_DATA,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(GEdge.G_EDGE.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GEdge.G_EDGE.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GEdge.G_EDGE.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GEdge>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(GEdge.G_EDGE.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
