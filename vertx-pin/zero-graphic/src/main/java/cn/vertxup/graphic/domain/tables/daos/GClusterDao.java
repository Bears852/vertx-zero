/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.graphic.domain.tables.daos;


import cn.vertxup.graphic.domain.tables.GCluster;
import cn.vertxup.graphic.domain.tables.records.GClusterRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GClusterDao extends DAOImpl<GClusterRecord, cn.vertxup.graphic.domain.tables.pojos.GCluster, String> implements VertxDAO<cn.vertxup.graphic.domain.tables.records.GClusterRecord,cn.vertxup.graphic.domain.tables.pojos.GCluster,java.lang.String> {

    /**
     * Create a new GClusterDao without any configuration
     */
    public GClusterDao() {
        super(GCluster.G_CLUSTER, cn.vertxup.graphic.domain.tables.pojos.GCluster.class);
    }

    /**
     * Create a new GClusterDao with an attached configuration
     */
    public GClusterDao(Configuration configuration) {
        super(GCluster.G_CLUSTER, cn.vertxup.graphic.domain.tables.pojos.GCluster.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.graphic.domain.tables.pojos.GCluster object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByKey(String... values) {
        return fetch(GCluster.G_CLUSTER.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.graphic.domain.tables.pojos.GCluster fetchOneByKey(String value) {
        return fetchOne(GCluster.G_CLUSTER.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByName(String... values) {
        return fetch(GCluster.G_CLUSTER.NAME, values);
    }

    /**
     * Fetch records that have <code>X IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByX(Integer... values) {
        return fetch(GCluster.G_CLUSTER.X, values);
    }

    /**
     * Fetch records that have <code>Y IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByY(Integer... values) {
        return fetch(GCluster.G_CLUSTER.Y, values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByGraphicId(String... values) {
        return fetch(GCluster.G_CLUSTER.GRAPHIC_ID, values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByUi(String... values) {
        return fetch(GCluster.G_CLUSTER.UI, values);
    }

    /**
     * Fetch records that have <code>RECORD_KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByRecordKey(String... values) {
        return fetch(GCluster.G_CLUSTER.RECORD_KEY, values);
    }

    /**
     * Fetch records that have <code>RECORD_DATA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByRecordData(String... values) {
        return fetch(GCluster.G_CLUSTER.RECORD_DATA, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchBySigma(String... values) {
        return fetch(GCluster.G_CLUSTER.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByLanguage(String... values) {
        return fetch(GCluster.G_CLUSTER.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByActive(Boolean... values) {
        return fetch(GCluster.G_CLUSTER.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByMetadata(String... values) {
        return fetch(GCluster.G_CLUSTER.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(GCluster.G_CLUSTER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByCreatedBy(String... values) {
        return fetch(GCluster.G_CLUSTER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(GCluster.G_CLUSTER.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchByUpdatedBy(String... values) {
        return fetch(GCluster.G_CLUSTER.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.graphic.domain.tables.pojos.GCluster> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByNameAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.NAME,values);
    }

    /**
     * Fetch records that have <code>X IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByXAsync(List<Integer> values) {
        return fetchAsync(GCluster.G_CLUSTER.X,values);
    }

    /**
     * Fetch records that have <code>Y IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByYAsync(List<Integer> values) {
        return fetchAsync(GCluster.G_CLUSTER.Y,values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByGraphicIdAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.GRAPHIC_ID,values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByUiAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.UI,values);
    }

    /**
     * Fetch records that have <code>RECORD_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByRecordKeyAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.RECORD_KEY,values);
    }

    /**
     * Fetch records that have <code>RECORD_DATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByRecordDataAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.RECORD_DATA,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(GCluster.G_CLUSTER.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GCluster.G_CLUSTER.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GCluster.G_CLUSTER.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GCluster>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(GCluster.G_CLUSTER.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
