/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.graphic.domain.tables.daos;


import cn.vertxup.graphic.domain.tables.GGraphic;
import cn.vertxup.graphic.domain.tables.records.GGraphicRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GGraphicDao extends DAOImpl<GGraphicRecord, cn.vertxup.graphic.domain.tables.pojos.GGraphic, String> implements VertxDAO<cn.vertxup.graphic.domain.tables.records.GGraphicRecord,cn.vertxup.graphic.domain.tables.pojos.GGraphic,java.lang.String> {

    /**
     * Create a new GGraphicDao without any configuration
     */
    public GGraphicDao() {
        super(GGraphic.G_GRAPHIC, cn.vertxup.graphic.domain.tables.pojos.GGraphic.class);
    }

    /**
     * Create a new GGraphicDao with an attached configuration
     */
    public GGraphicDao(Configuration configuration) {
        super(GGraphic.G_GRAPHIC, cn.vertxup.graphic.domain.tables.pojos.GGraphic.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.graphic.domain.tables.pojos.GGraphic object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByKey(String... values) {
        return fetch(GGraphic.G_GRAPHIC.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.graphic.domain.tables.pojos.GGraphic fetchOneByKey(String value) {
        return fetchOne(GGraphic.G_GRAPHIC.KEY, value);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByName(String... values) {
        return fetch(GGraphic.G_GRAPHIC.NAME, values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByCode(String... values) {
        return fetch(GGraphic.G_GRAPHIC.CODE, values);
    }

    /**
     * Fetch records that have <code>MODE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByMode(String... values) {
        return fetch(GGraphic.G_GRAPHIC.MODE, values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByType(String... values) {
        return fetch(GGraphic.G_GRAPHIC.TYPE, values);
    }

    /**
     * Fetch records that have <code>COMMENTS IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByComments(String... values) {
        return fetch(GGraphic.G_GRAPHIC.COMMENTS, values);
    }

    /**
     * Fetch records that have <code>OWNER_ID IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByOwnerId(String... values) {
        return fetch(GGraphic.G_GRAPHIC.OWNER_ID, values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByUi(String... values) {
        return fetch(GGraphic.G_GRAPHIC.UI, values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByGraphicId(String... values) {
        return fetch(GGraphic.G_GRAPHIC.GRAPHIC_ID, values);
    }

    /**
     * Fetch records that have <code>MASTER IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByMaster(Boolean... values) {
        return fetch(GGraphic.G_GRAPHIC.MASTER, values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByModelId(String... values) {
        return fetch(GGraphic.G_GRAPHIC.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByModelKey(String... values) {
        return fetch(GGraphic.G_GRAPHIC.MODEL_KEY, values);
    }

    /**
     * Fetch records that have <code>MODEL_CATEGORY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByModelCategory(String... values) {
        return fetch(GGraphic.G_GRAPHIC.MODEL_CATEGORY, values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchBySigma(String... values) {
        return fetch(GGraphic.G_GRAPHIC.SIGMA, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByLanguage(String... values) {
        return fetch(GGraphic.G_GRAPHIC.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByActive(Boolean... values) {
        return fetch(GGraphic.G_GRAPHIC.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByMetadata(String... values) {
        return fetch(GGraphic.G_GRAPHIC.METADATA, values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(GGraphic.G_GRAPHIC.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByCreatedBy(String... values) {
        return fetch(GGraphic.G_GRAPHIC.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(GGraphic.G_GRAPHIC.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code>
     */
    public List<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchByUpdatedBy(String... values) {
        return fetch(GGraphic.G_GRAPHIC.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.graphic.domain.tables.pojos.GGraphic> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByNameAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.NAME,values);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByCodeAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.CODE,values);
    }

    /**
     * Fetch records that have <code>MODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByModeAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.MODE,values);
    }

    /**
     * Fetch records that have <code>TYPE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByTypeAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.TYPE,values);
    }

    /**
     * Fetch records that have <code>COMMENTS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByCommentsAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.COMMENTS,values);
    }

    /**
     * Fetch records that have <code>OWNER_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByOwnerIdAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.OWNER_ID,values);
    }

    /**
     * Fetch records that have <code>UI IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByUiAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.UI,values);
    }

    /**
     * Fetch records that have <code>GRAPHIC_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByGraphicIdAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.GRAPHIC_ID,values);
    }

    /**
     * Fetch records that have <code>MASTER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByMasterAsync(List<Boolean> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.MASTER,values);
    }

    /**
     * Fetch records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByModelIdAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.MODEL_ID,values);
    }

    /**
     * Fetch records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByModelKeyAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.MODEL_KEY,values);
    }

    /**
     * Fetch records that have <code>MODEL_CATEGORY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByModelCategoryAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.MODEL_CATEGORY,values);
    }

    /**
     * Fetch records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchBySigmaAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.SIGMA,values);
    }

    /**
     * Fetch records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByLanguageAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.LANGUAGE,values);
    }

    /**
     * Fetch records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByActiveAsync(List<Boolean> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.ACTIVE,values);
    }

    /**
     * Fetch records that have <code>METADATA IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByMetadataAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.METADATA,values);
    }

    /**
     * Fetch records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByCreatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.CREATED_AT,values);
    }

    /**
     * Fetch records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByCreatedByAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.CREATED_BY,values);
    }

    /**
     * Fetch records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByUpdatedAtAsync(List<LocalDateTime> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.UPDATED_AT,values);
    }

    /**
     * Fetch records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.graphic.domain.tables.pojos.GGraphic>> fetchByUpdatedByAsync(List<String> values) {
        return fetchAsync(GGraphic.G_GRAPHIC.UPDATED_BY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
