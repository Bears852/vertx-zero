/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.atom.domain.tables.records;


import cn.vertxup.atom.domain.tables.MIndex;
import cn.vertxup.atom.domain.tables.interfaces.IMIndex;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MIndexRecord extends UpdatableRecordImpl<MIndexRecord> implements Record15<String, String, String, Boolean, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IMIndex {

    private static final long serialVersionUID = -864379391;

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.KEY</code>. 「key」- 索引ID
     */
    @Override
    public MIndexRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.KEY</code>. 「key」- 索引ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.NAME</code>. 「name」- 索引名称
     */
    @Override
    public MIndexRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.NAME</code>. 「name」- 索引名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.TYPE</code>. 「type」- 索引类型
     */
    @Override
    public MIndexRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.TYPE</code>. 「type」- 索引类型
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.CLUSTERED</code>. 「clustered」- 是否聚集索引
     */
    @Override
    public MIndexRecord setClustered(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.CLUSTERED</code>. 「clustered」- 是否聚集索引
     */
    @Override
    public Boolean getClustered() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.COLUMNS</code>. 「columns」- JsonArray格式，索引覆盖的列集合
     */
    @Override
    public MIndexRecord setColumns(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.COLUMNS</code>. 「columns」- JsonArray格式，索引覆盖的列集合
     */
    @Override
    public String getColumns() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.ENTITY_ID</code>. 「entityId」- 关联的实体ID
     */
    @Override
    public MIndexRecord setEntityId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.ENTITY_ID</code>. 「entityId」- 关联的实体ID
     */
    @Override
    public String getEntityId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.COMMENTS</code>. 「comments」- 当前索引的描述信息
     */
    @Override
    public MIndexRecord setComments(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.COMMENTS</code>. 「comments」- 当前索引的描述信息
     */
    @Override
    public String getComments() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public MIndexRecord setSigma(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public MIndexRecord setLanguage(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public MIndexRecord setActive(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public MIndexRecord setMetadata(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public MIndexRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public MIndexRecord setCreatedBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public MIndexRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.M_INDEX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public MIndexRecord setUpdatedBy(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.M_INDEX.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, Boolean, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, String, String, Boolean, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return MIndex.M_INDEX.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return MIndex.M_INDEX.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MIndex.M_INDEX.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return MIndex.M_INDEX.CLUSTERED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return MIndex.M_INDEX.COLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return MIndex.M_INDEX.ENTITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return MIndex.M_INDEX.COMMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return MIndex.M_INDEX.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return MIndex.M_INDEX.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return MIndex.M_INDEX.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return MIndex.M_INDEX.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field12() {
        return MIndex.M_INDEX.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return MIndex.M_INDEX.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field14() {
        return MIndex.M_INDEX.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return MIndex.M_INDEX.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getClustered();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getEntityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getComments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getClustered();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getColumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getEntityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getComments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value12() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value14() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value4(Boolean value) {
        setClustered(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value5(String value) {
        setColumns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value6(String value) {
        setEntityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value7(String value) {
        setComments(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value8(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value9(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value10(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value11(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value12(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value13(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value14(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord value15(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MIndexRecord values(String value1, String value2, String value3, Boolean value4, String value5, String value6, String value7, String value8, String value9, Boolean value10, String value11, LocalDateTime value12, String value13, LocalDateTime value14, String value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IMIndex from) {
        setKey(from.getKey());
        setName(from.getName());
        setType(from.getType());
        setClustered(from.getClustered());
        setColumns(from.getColumns());
        setEntityId(from.getEntityId());
        setComments(from.getComments());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IMIndex> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MIndexRecord
     */
    public MIndexRecord() {
        super(MIndex.M_INDEX);
    }

    /**
     * Create a detached, initialised MIndexRecord
     */
    public MIndexRecord(String key, String name, String type, Boolean clustered, String columns, String entityId, String comments, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(MIndex.M_INDEX);

        set(0, key);
        set(1, name);
        set(2, type);
        set(3, clustered);
        set(4, columns);
        set(5, entityId);
        set(6, comments);
        set(7, sigma);
        set(8, language);
        set(9, active);
        set(10, metadata);
        set(11, createdAt);
        set(12, createdBy);
        set(13, updatedAt);
        set(14, updatedBy);
    }
}
