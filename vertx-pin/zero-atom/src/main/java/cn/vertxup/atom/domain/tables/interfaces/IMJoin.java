/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.atom.domain.tables.interfaces;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IMJoin extends Serializable {

    /**
     * Setter for <code>DB_ETERNAL.M_JOIN.MODEL</code>. 「model」- 模型identifier
     */
    public IMJoin setModel(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_JOIN.MODEL</code>. 「model」- 模型identifier
     */
    public String getModel();

    /**
     * Setter for <code>DB_ETERNAL.M_JOIN.ENTITY</code>. 「entity」- 实体identifier
     */
    public IMJoin setEntity(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_JOIN.ENTITY</code>. 「entity」- 实体identifier
     */
    public String getEntity();

    /**
     * Setter for <code>DB_ETERNAL.M_JOIN.ENTITY_KEY</code>. 「entityKey」- 实体主键字段名
     */
    public IMJoin setEntityKey(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_JOIN.ENTITY_KEY</code>. 「entityKey」- 实体主键字段名
     */
    public String getEntityKey();

    /**
     * Setter for <code>DB_ETERNAL.M_JOIN.PRIORITY</code>. 「priority」- 优先级
     */
    public IMJoin setPriority(Integer value);

    /**
     * Getter for <code>DB_ETERNAL.M_JOIN.PRIORITY</code>. 「priority」- 优先级
     */
    public Integer getPriority();

    /**
     * Setter for <code>DB_ETERNAL.M_JOIN.NAMESPACE</code>. 「namespace」- 名空间（和App绑定的）
     */
    public IMJoin setNamespace(String value);

    /**
     * Getter for <code>DB_ETERNAL.M_JOIN.NAMESPACE</code>. 「namespace」- 名空间（和App绑定的）
     */
    public String getNamespace();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IMJoin
     */
    public void from(cn.vertxup.atom.domain.tables.interfaces.IMJoin from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IMJoin
     */
    public <E extends cn.vertxup.atom.domain.tables.interfaces.IMJoin> E into(E into);

    default IMJoin fromJson(io.vertx.core.json.JsonObject json) {
        setModel(json.getString("MODEL"));
        setEntity(json.getString("ENTITY"));
        setEntityKey(json.getString("ENTITY_KEY"));
        setPriority(json.getInteger("PRIORITY"));
        setNamespace(json.getString("NAMESPACE"));
        return this;
    }


    default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("MODEL",getModel());
        json.put("ENTITY",getEntity());
        json.put("ENTITY_KEY",getEntityKey());
        json.put("PRIORITY",getPriority());
        json.put("NAMESPACE",getNamespace());
        return json;
    }

}
