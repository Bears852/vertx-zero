/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.rbac.domain.tables.daos;


import cn.vertxup.rbac.domain.tables.RGroupRole;
import cn.vertxup.rbac.domain.tables.records.RGroupRoleRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RGroupRoleDao extends DAOImpl<RGroupRoleRecord, cn.vertxup.rbac.domain.tables.pojos.RGroupRole, Record2<String, String>> implements VertxDAO<cn.vertxup.rbac.domain.tables.records.RGroupRoleRecord,cn.vertxup.rbac.domain.tables.pojos.RGroupRole,org.jooq.Record2<java.lang.String, java.lang.String>> {

    /**
     * Create a new RGroupRoleDao without any configuration
     */
    public RGroupRoleDao() {
        super(RGroupRole.R_GROUP_ROLE, cn.vertxup.rbac.domain.tables.pojos.RGroupRole.class);
    }

    /**
     * Create a new RGroupRoleDao with an attached configuration
     */
    public RGroupRoleDao(Configuration configuration) {
        super(RGroupRole.R_GROUP_ROLE, cn.vertxup.rbac.domain.tables.pojos.RGroupRole.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(cn.vertxup.rbac.domain.tables.pojos.RGroupRole object) {
        return compositeKeyRecord(object.getGroupId(), object.getRoleId());
    }

    /**
     * Fetch records that have <code>GROUP_ID IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole> fetchByGroupId(String... values) {
        return fetch(RGroupRole.R_GROUP_ROLE.GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole> fetchByRoleId(String... values) {
        return fetch(RGroupRole.R_GROUP_ROLE.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>PRIORITY IN (values)</code>
     */
    public List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole> fetchByPriority(Integer... values) {
        return fetch(RGroupRole.R_GROUP_ROLE.PRIORITY, values);
    }

    /**
     * Fetch records that have <code>GROUP_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole>> fetchByGroupIdAsync(List<String> values) {
        return fetchAsync(RGroupRole.R_GROUP_ROLE.GROUP_ID,values);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole>> fetchByRoleIdAsync(List<String> values) {
        return fetchAsync(RGroupRole.R_GROUP_ROLE.ROLE_ID,values);
    }

    /**
     * Fetch records that have <code>PRIORITY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.rbac.domain.tables.pojos.RGroupRole>> fetchByPriorityAsync(List<Integer> values) {
        return fetchAsync(RGroupRole.R_GROUP_ROLE.PRIORITY,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
