/*
 * This file is generated by jOOQ.
 */
package cn.vertxup.rbac.domain.tables;


import cn.vertxup.rbac.domain.Db;
import cn.vertxup.rbac.domain.Indexes;
import cn.vertxup.rbac.domain.Keys;
import cn.vertxup.rbac.domain.tables.records.RGroupRoleRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.8"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RGroupRole extends TableImpl<RGroupRoleRecord> {

    /**
     * The reference instance of <code>DB_ETERNAL.R_GROUP_ROLE</code>
     */
    public static final RGroupRole R_GROUP_ROLE = new RGroupRole();
    private static final long serialVersionUID = 1052609723;
    /**
     * The column <code>DB_ETERNAL.R_GROUP_ROLE.GROUP_ID</code>. 「groupId」- 关联组ID
     */
    public final TableField<RGroupRoleRecord, String> GROUP_ID = createField("GROUP_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「groupId」- 关联组ID");
    /**
     * The column <code>DB_ETERNAL.R_GROUP_ROLE.ROLE_ID</code>. 「roleId」- 关联角色ID
     */
    public final TableField<RGroupRoleRecord, String> ROLE_ID = createField("ROLE_ID", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "「roleId」- 关联角色ID");
    /**
     * The column <code>DB_ETERNAL.R_GROUP_ROLE.PRIORITY</code>. 「priority」- 角色优先级
     */
    public final TableField<RGroupRoleRecord, Integer> PRIORITY = createField("PRIORITY", org.jooq.impl.SQLDataType.INTEGER, this, "「priority」- 角色优先级");

    /**
     * Create a <code>DB_ETERNAL.R_GROUP_ROLE</code> table reference
     */
    public RGroupRole() {
        this(DSL.name("R_GROUP_ROLE"), null);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.R_GROUP_ROLE</code> table reference
     */
    public RGroupRole(String alias) {
        this(DSL.name(alias), R_GROUP_ROLE);
    }

    /**
     * Create an aliased <code>DB_ETERNAL.R_GROUP_ROLE</code> table reference
     */
    public RGroupRole(Name alias) {
        this(alias, R_GROUP_ROLE);
    }

    private RGroupRole(Name alias, Table<RGroupRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private RGroupRole(Name alias, Table<RGroupRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RGroupRoleRecord> getRecordType() {
        return RGroupRoleRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB_ETERNAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.R_GROUP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RGroupRoleRecord> getPrimaryKey() {
        return Keys.KEY_R_GROUP_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RGroupRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<RGroupRoleRecord>>asList(Keys.KEY_R_GROUP_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RGroupRole as(String alias) {
        return new RGroupRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RGroupRole as(Name alias) {
        return new RGroupRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RGroupRole rename(String name) {
        return new RGroupRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RGroupRole rename(Name name) {
        return new RGroupRole(name, null);
    }
}
