/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.records;


import cn.vertxup.ui.domain.tables.UiList;
import cn.vertxup.ui.domain.tables.interfaces.IUiList;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiListRecord extends UpdatableRecordImpl<UiListRecord> implements Record21<String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IUiList {

    private static final long serialVersionUID = -119676973;

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.KEY</code>. 「key」- 主键
     */
    @Override
    public UiListRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.KEY</code>. 「key」- 主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.NAME</code>. 「name」- 名称
     */
    @Override
    public UiListRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.NAME</code>. 「name」- 名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.CODE</code>. 「code」- 系统编码
     */
    @Override
    public UiListRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.CODE</code>. 「code」- 系统编码
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.V_QUERY</code>. 「vQuery」- 连接query到 grid -&gt; query 节点
     */
    @Override
    public UiListRecord setVQuery(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.V_QUERY</code>. 「vQuery」- 连接query到 grid -&gt; query 节点
     */
    @Override
    public String getVQuery() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.V_SEARCH</code>. 「vSearch」- 连接search到 grid -&gt; options 节点
     */
    @Override
    public UiListRecord setVSearch(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.V_SEARCH</code>. 「vSearch」- 连接search到 grid -&gt; options 节点
     */
    @Override
    public String getVSearch() {
        return (String) get(4);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.V_TABLE</code>. 「vTable」- 连接table到 grid -&gt; table 节点
     */
    @Override
    public UiListRecord setVTable(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.V_TABLE</code>. 「vTable」- 连接table到 grid -&gt; table 节点
     */
    @Override
    public String getVTable() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.V_SEGMENT</code>. 「vSegment」- Json结构，对应到 grid -&gt; component 节点
     */
    @Override
    public UiListRecord setVSegment(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.V_SEGMENT</code>. 「vSegment」- Json结构，对应到 grid -&gt; component 节点
     */
    @Override
    public String getVSegment() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.DYNAMIC_COLUMN</code>. 「dynamicColumn」- 动态列？
     */
    @Override
    public UiListRecord setDynamicColumn(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.DYNAMIC_COLUMN</code>. 「dynamicColumn」- 动态列？
     */
    @Override
    public Boolean getDynamicColumn() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.DYNAMIC_SWITCH</code>. 「dynamicSwitch」- 动态切换？
     */
    @Override
    public UiListRecord setDynamicSwitch(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.DYNAMIC_SWITCH</code>. 「dynamicSwitch」- 动态切换？
     */
    @Override
    public Boolean getDynamicSwitch() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.OPTIONS_AJAX</code>. 「optionsAjax」- 所有 ajax系列的配置
     */
    @Override
    public UiListRecord setOptionsAjax(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.OPTIONS_AJAX</code>. 「optionsAjax」- 所有 ajax系列的配置
     */
    @Override
    public String getOptionsAjax() {
        return (String) get(9);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.OPTIONS_SUBMIT</code>. 「optionsSubmit」- 所有提交类的配置
     */
    @Override
    public UiListRecord setOptionsSubmit(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.OPTIONS_SUBMIT</code>. 「optionsSubmit」- 所有提交类的配置
     */
    @Override
    public String getOptionsSubmit() {
        return (String) get(10);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.OPTIONS</code>. 「options」- 配置项
     */
    @Override
    public UiListRecord setOptions(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.OPTIONS</code>. 「options」- 配置项
     */
    @Override
    public String getOptions() {
        return (String) get(11);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.CLASS_COMBINER</code>. 「classCombiner」- 组装器
     */
    @Override
    public UiListRecord setClassCombiner(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.CLASS_COMBINER</code>. 「classCombiner」- 组装器
     */
    @Override
    public String getClassCombiner() {
        return (String) get(12);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public UiListRecord setActive(Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public UiListRecord setSigma(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(14);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public UiListRecord setMetadata(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(15);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public UiListRecord setLanguage(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(16);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public UiListRecord setCreatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public UiListRecord setCreatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public UiListRecord setUpdatedAt(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>DB_ETERNAL.UI_LIST.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public UiListRecord setUpdatedBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>DB_ETERNAL.UI_LIST.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row21<String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row21<String, String, String, String, String, String, String, Boolean, Boolean, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row21) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return UiList.UI_LIST.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UiList.UI_LIST.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UiList.UI_LIST.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UiList.UI_LIST.V_QUERY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UiList.UI_LIST.V_SEARCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return UiList.UI_LIST.V_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return UiList.UI_LIST.V_SEGMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return UiList.UI_LIST.DYNAMIC_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return UiList.UI_LIST.DYNAMIC_SWITCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return UiList.UI_LIST.OPTIONS_AJAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return UiList.UI_LIST.OPTIONS_SUBMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return UiList.UI_LIST.OPTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return UiList.UI_LIST.CLASS_COMBINER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field14() {
        return UiList.UI_LIST.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return UiList.UI_LIST.SIGMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return UiList.UI_LIST.METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return UiList.UI_LIST.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field18() {
        return UiList.UI_LIST.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return UiList.UI_LIST.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field20() {
        return UiList.UI_LIST.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field21() {
        return UiList.UI_LIST.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getVQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getVSearch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getVTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getVSegment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getDynamicColumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getDynamicSwitch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getOptionsAjax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getOptionsSubmit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getOptions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getClassCombiner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component14() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component18() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component20() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component21() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getVQuery();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getVSearch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getVTable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getVSegment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getDynamicColumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getDynamicSwitch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getOptionsAjax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getOptionsSubmit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getOptions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getClassCombiner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value14() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getSigma();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getMetadata();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value18() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value20() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value21() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value1(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value3(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value4(String value) {
        setVQuery(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value5(String value) {
        setVSearch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value6(String value) {
        setVTable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value7(String value) {
        setVSegment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value8(Boolean value) {
        setDynamicColumn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value9(Boolean value) {
        setDynamicSwitch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value10(String value) {
        setOptionsAjax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value11(String value) {
        setOptionsSubmit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value12(String value) {
        setOptions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value13(String value) {
        setClassCombiner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value14(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value15(String value) {
        setSigma(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value16(String value) {
        setMetadata(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value17(String value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value18(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value19(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value20(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord value21(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UiListRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, Boolean value8, Boolean value9, String value10, String value11, String value12, String value13, Boolean value14, String value15, String value16, String value17, LocalDateTime value18, String value19, LocalDateTime value20, String value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiList from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setVQuery(from.getVQuery());
        setVSearch(from.getVSearch());
        setVTable(from.getVTable());
        setVSegment(from.getVSegment());
        setDynamicColumn(from.getDynamicColumn());
        setDynamicSwitch(from.getDynamicSwitch());
        setOptionsAjax(from.getOptionsAjax());
        setOptionsSubmit(from.getOptionsSubmit());
        setOptions(from.getOptions());
        setClassCombiner(from.getClassCombiner());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiList> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UiListRecord
     */
    public UiListRecord() {
        super(UiList.UI_LIST);
    }

    /**
     * Create a detached, initialised UiListRecord
     */
    public UiListRecord(String key, String name, String code, String vQuery, String vSearch, String vTable, String vSegment, Boolean dynamicColumn, Boolean dynamicSwitch, String optionsAjax, String optionsSubmit, String options, String classCombiner, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(UiList.UI_LIST);

        set(0, key);
        set(1, name);
        set(2, code);
        set(3, vQuery);
        set(4, vSearch);
        set(5, vTable);
        set(6, vSegment);
        set(7, dynamicColumn);
        set(8, dynamicSwitch);
        set(9, optionsAjax);
        set(10, optionsSubmit);
        set(11, options);
        set(12, classCombiner);
        set(13, active);
        set(14, sigma);
        set(15, metadata);
        set(16, language);
        set(17, createdAt);
        set(18, createdBy);
        set(19, updatedAt);
        set(20, updatedBy);
    }
}
