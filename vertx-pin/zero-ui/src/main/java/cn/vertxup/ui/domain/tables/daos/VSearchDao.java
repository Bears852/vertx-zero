/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.VSearch;
import cn.vertxup.ui.domain.tables.records.VSearchRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VSearchDao extends DAOImpl<VSearchRecord, cn.vertxup.ui.domain.tables.pojos.VSearch, String> implements VertxDAO<cn.vertxup.ui.domain.tables.records.VSearchRecord,cn.vertxup.ui.domain.tables.pojos.VSearch,java.lang.String> {

    /**
     * Create a new VSearchDao without any configuration
     */
    public VSearchDao() {
        super(VSearch.V_SEARCH, cn.vertxup.ui.domain.tables.pojos.VSearch.class);
    }

    /**
     * Create a new VSearchDao with an attached configuration
     */
    public VSearchDao(Configuration configuration) {
        super(VSearch.V_SEARCH, cn.vertxup.ui.domain.tables.pojos.VSearch.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ui.domain.tables.pojos.VSearch object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByKey(String... values) {
        return fetch(VSearch.V_SEARCH.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ui.domain.tables.pojos.VSearch fetchOneByKey(String value) {
        return fetchOne(VSearch.V_SEARCH.KEY, value);
    }

    /**
     * Fetch records that have <code>ENABLED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByEnabled(Boolean... values) {
        return fetch(VSearch.V_SEARCH.ENABLED, values);
    }

    /**
     * Fetch records that have <code>ADVANCED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByAdvanced(Boolean... values) {
        return fetch(VSearch.V_SEARCH.ADVANCED, values);
    }

    /**
     * Fetch records that have <code>OP_REDO IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByOpRedo(String... values) {
        return fetch(VSearch.V_SEARCH.OP_REDO, values);
    }

    /**
     * Fetch records that have <code>OP_ADVANCED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByOpAdvanced(String... values) {
        return fetch(VSearch.V_SEARCH.OP_ADVANCED, values);
    }

    /**
     * Fetch records that have <code>CONFIRM_CLEAR IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByConfirmClear(String... values) {
        return fetch(VSearch.V_SEARCH.CONFIRM_CLEAR, values);
    }

    /**
     * Fetch records that have <code>PLACEHOLDER IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByPlaceholder(String... values) {
        return fetch(VSearch.V_SEARCH.PLACEHOLDER, values);
    }

    /**
     * Fetch records that have <code>COND IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByCond(String... values) {
        return fetch(VSearch.V_SEARCH.COND, values);
    }

    /**
     * Fetch records that have <code>ADVANCED_WIDTH IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByAdvancedWidth(String... values) {
        return fetch(VSearch.V_SEARCH.ADVANCED_WIDTH, values);
    }

    /**
     * Fetch records that have <code>ADVANCED_TITLE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByAdvancedTitle(String... values) {
        return fetch(VSearch.V_SEARCH.ADVANCED_TITLE, values);
    }

    /**
     * Fetch records that have <code>ADVANCED_NOTICE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchByAdvancedNotice(String... values) {
        return fetch(VSearch.V_SEARCH.ADVANCED_NOTICE, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ui.domain.tables.pojos.VSearch> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>ENABLED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByEnabledAsync(List<Boolean> values) {
        return fetchAsync(VSearch.V_SEARCH.ENABLED,values);
    }

    /**
     * Fetch records that have <code>ADVANCED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByAdvancedAsync(List<Boolean> values) {
        return fetchAsync(VSearch.V_SEARCH.ADVANCED,values);
    }

    /**
     * Fetch records that have <code>OP_REDO IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByOpRedoAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.OP_REDO,values);
    }

    /**
     * Fetch records that have <code>OP_ADVANCED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByOpAdvancedAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.OP_ADVANCED,values);
    }

    /**
     * Fetch records that have <code>CONFIRM_CLEAR IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByConfirmClearAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.CONFIRM_CLEAR,values);
    }

    /**
     * Fetch records that have <code>PLACEHOLDER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByPlaceholderAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.PLACEHOLDER,values);
    }

    /**
     * Fetch records that have <code>COND IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByCondAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.COND,values);
    }

    /**
     * Fetch records that have <code>ADVANCED_WIDTH IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByAdvancedWidthAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.ADVANCED_WIDTH,values);
    }

    /**
     * Fetch records that have <code>ADVANCED_TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByAdvancedTitleAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.ADVANCED_TITLE,values);
    }

    /**
     * Fetch records that have <code>ADVANCED_NOTICE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VSearch>> fetchByAdvancedNoticeAsync(List<String> values) {
        return fetchAsync(VSearch.V_SEARCH.ADVANCED_NOTICE,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
