/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.VFragment;
import cn.vertxup.ui.domain.tables.records.VFragmentRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VFragmentDao extends DAOImpl<VFragmentRecord, cn.vertxup.ui.domain.tables.pojos.VFragment, String> implements VertxDAO<cn.vertxup.ui.domain.tables.records.VFragmentRecord,cn.vertxup.ui.domain.tables.pojos.VFragment,java.lang.String> {

    /**
     * Create a new VFragmentDao without any configuration
     */
    public VFragmentDao() {
        super(VFragment.V_FRAGMENT, cn.vertxup.ui.domain.tables.pojos.VFragment.class);
    }

    /**
     * Create a new VFragmentDao with an attached configuration
     */
    public VFragmentDao(Configuration configuration) {
        super(VFragment.V_FRAGMENT, cn.vertxup.ui.domain.tables.pojos.VFragment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ui.domain.tables.pojos.VFragment object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByKey(String... values) {
        return fetch(VFragment.V_FRAGMENT.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ui.domain.tables.pojos.VFragment fetchOneByKey(String value) {
        return fetchOne(VFragment.V_FRAGMENT.KEY, value);
    }

    /**
     * Fetch records that have <code>CONTAINER IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByContainer(String... values) {
        return fetch(VFragment.V_FRAGMENT.CONTAINER, values);
    }

    /**
     * Fetch records that have <code>NOTICE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByNotice(String... values) {
        return fetch(VFragment.V_FRAGMENT.NOTICE, values);
    }

    /**
     * Fetch records that have <code>BUTTON_CONNECT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByButtonConnect(String... values) {
        return fetch(VFragment.V_FRAGMENT.BUTTON_CONNECT, values);
    }

    /**
     * Fetch records that have <code>BUTTON_GROUP IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByButtonGroup(String... values) {
        return fetch(VFragment.V_FRAGMENT.BUTTON_GROUP, values);
    }

    /**
     * Fetch records that have <code>MODAL IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByModal(String... values) {
        return fetch(VFragment.V_FRAGMENT.MODAL, values);
    }

    /**
     * Fetch records that have <code>GRID IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByGrid(Integer... values) {
        return fetch(VFragment.V_FRAGMENT.GRID, values);
    }

    /**
     * Fetch records that have <code>CONFIG IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchByConfig(String... values) {
        return fetch(VFragment.V_FRAGMENT.CONFIG, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ui.domain.tables.pojos.VFragment> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>CONTAINER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByContainerAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.CONTAINER,values);
    }

    /**
     * Fetch records that have <code>NOTICE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByNoticeAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.NOTICE,values);
    }

    /**
     * Fetch records that have <code>BUTTON_CONNECT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByButtonConnectAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.BUTTON_CONNECT,values);
    }

    /**
     * Fetch records that have <code>BUTTON_GROUP IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByButtonGroupAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.BUTTON_GROUP,values);
    }

    /**
     * Fetch records that have <code>MODAL IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByModalAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.MODAL,values);
    }

    /**
     * Fetch records that have <code>GRID IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByGridAsync(List<Integer> values) {
        return fetchAsync(VFragment.V_FRAGMENT.GRID,values);
    }

    /**
     * Fetch records that have <code>CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VFragment>> fetchByConfigAsync(List<String> values) {
        return fetchAsync(VFragment.V_FRAGMENT.CONFIG,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
