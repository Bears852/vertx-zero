/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.daos;


import cn.vertxup.ui.domain.tables.VTable;
import cn.vertxup.ui.domain.tables.records.VTableRecord;

import io.github.jklingsporn.vertx.jooq.future.VertxDAO;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.future.util.FutureTool;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VTableDao extends DAOImpl<VTableRecord, cn.vertxup.ui.domain.tables.pojos.VTable, String> implements VertxDAO<cn.vertxup.ui.domain.tables.records.VTableRecord,cn.vertxup.ui.domain.tables.pojos.VTable,java.lang.String> {

    /**
     * Create a new VTableDao without any configuration
     */
    public VTableDao() {
        super(VTable.V_TABLE, cn.vertxup.ui.domain.tables.pojos.VTable.class);
    }

    /**
     * Create a new VTableDao with an attached configuration
     */
    public VTableDao(Configuration configuration) {
        super(VTable.V_TABLE, cn.vertxup.ui.domain.tables.pojos.VTable.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.vertxup.ui.domain.tables.pojos.VTable object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByKey(String... values) {
        return fetch(VTable.V_TABLE.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code>
     */
    public cn.vertxup.ui.domain.tables.pojos.VTable fetchOneByKey(String value) {
        return fetchOne(VTable.V_TABLE.KEY, value);
    }

    /**
     * Fetch records that have <code>BORDERED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByBordered(Boolean... values) {
        return fetch(VTable.V_TABLE.BORDERED, values);
    }

    /**
     * Fetch records that have <code>SIZE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchBySize(String... values) {
        return fetch(VTable.V_TABLE.SIZE, values);
    }

    /**
     * Fetch records that have <code>CLASS_NAME IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByClassName(String... values) {
        return fetch(VTable.V_TABLE.CLASS_NAME, values);
    }

    /**
     * Fetch records that have <code>TOTAL_REPORT IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByTotalReport(String... values) {
        return fetch(VTable.V_TABLE.TOTAL_REPORT, values);
    }

    /**
     * Fetch records that have <code>TOTAL_SELECTED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByTotalSelected(String... values) {
        return fetch(VTable.V_TABLE.TOTAL_SELECTED, values);
    }

    /**
     * Fetch records that have <code>ROW_DOUBLE_CLICK IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByRowDoubleClick(String... values) {
        return fetch(VTable.V_TABLE.ROW_DOUBLE_CLICK, values);
    }

    /**
     * Fetch records that have <code>ROW_CLICK IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByRowClick(String... values) {
        return fetch(VTable.V_TABLE.ROW_CLICK, values);
    }

    /**
     * Fetch records that have <code>ROW_CONTEXT_MENU IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByRowContextMenu(String... values) {
        return fetch(VTable.V_TABLE.ROW_CONTEXT_MENU, values);
    }

    /**
     * Fetch records that have <code>ROW_MOUSE_ENTER IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByRowMouseEnter(String... values) {
        return fetch(VTable.V_TABLE.ROW_MOUSE_ENTER, values);
    }

    /**
     * Fetch records that have <code>ROW_MOUSE_LEAVE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByRowMouseLeave(String... values) {
        return fetch(VTable.V_TABLE.ROW_MOUSE_LEAVE, values);
    }

    /**
     * Fetch records that have <code>OP_TITLE IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByOpTitle(String... values) {
        return fetch(VTable.V_TABLE.OP_TITLE, values);
    }

    /**
     * Fetch records that have <code>OP_DATA_INDEX IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByOpDataIndex(String... values) {
        return fetch(VTable.V_TABLE.OP_DATA_INDEX, values);
    }

    /**
     * Fetch records that have <code>OP_FIXED IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByOpFixed(Boolean... values) {
        return fetch(VTable.V_TABLE.OP_FIXED, values);
    }

    /**
     * Fetch records that have <code>OP_CONFIG IN (values)</code>
     */
    public List<cn.vertxup.ui.domain.tables.pojos.VTable> fetchByOpConfig(String... values) {
        return fetch(VTable.V_TABLE.OP_CONFIG, values);
    }

    /**
     * Fetch records that have <code>KEY IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByKeyAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.KEY,values);
    }

    /**
     * Fetch a unique record that has <code>KEY = value</code> asynchronously
     */
    public CompletableFuture<cn.vertxup.ui.domain.tables.pojos.VTable> fetchOneByKeyAsync(String value) {
        return FutureTool.executeBlocking(h->h.complete(fetchOneByKey(value)),vertx());
    }

    /**
     * Fetch records that have <code>BORDERED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByBorderedAsync(List<Boolean> values) {
        return fetchAsync(VTable.V_TABLE.BORDERED,values);
    }

    /**
     * Fetch records that have <code>SIZE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchBySizeAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.SIZE,values);
    }

    /**
     * Fetch records that have <code>CLASS_NAME IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByClassNameAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.CLASS_NAME,values);
    }

    /**
     * Fetch records that have <code>TOTAL_REPORT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByTotalReportAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.TOTAL_REPORT,values);
    }

    /**
     * Fetch records that have <code>TOTAL_SELECTED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByTotalSelectedAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.TOTAL_SELECTED,values);
    }

    /**
     * Fetch records that have <code>ROW_DOUBLE_CLICK IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByRowDoubleClickAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.ROW_DOUBLE_CLICK,values);
    }

    /**
     * Fetch records that have <code>ROW_CLICK IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByRowClickAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.ROW_CLICK,values);
    }

    /**
     * Fetch records that have <code>ROW_CONTEXT_MENU IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByRowContextMenuAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.ROW_CONTEXT_MENU,values);
    }

    /**
     * Fetch records that have <code>ROW_MOUSE_ENTER IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByRowMouseEnterAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.ROW_MOUSE_ENTER,values);
    }

    /**
     * Fetch records that have <code>ROW_MOUSE_LEAVE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByRowMouseLeaveAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.ROW_MOUSE_LEAVE,values);
    }

    /**
     * Fetch records that have <code>OP_TITLE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByOpTitleAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.OP_TITLE,values);
    }

    /**
     * Fetch records that have <code>OP_DATA_INDEX IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByOpDataIndexAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.OP_DATA_INDEX,values);
    }

    /**
     * Fetch records that have <code>OP_FIXED IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByOpFixedAsync(List<Boolean> values) {
        return fetchAsync(VTable.V_TABLE.OP_FIXED,values);
    }

    /**
     * Fetch records that have <code>OP_CONFIG IN (values)</code> asynchronously
     */
    public CompletableFuture<List<cn.vertxup.ui.domain.tables.pojos.VTable>> fetchByOpConfigAsync(List<String> values) {
        return fetchAsync(VTable.V_TABLE.OP_CONFIG,values);
    }

    private io.vertx.core.Vertx vertx;

    @Override
    public void setVertx(io.vertx.core.Vertx vertx) {
        this.vertx = vertx;
    }

    @Override
    public io.vertx.core.Vertx vertx() {
        return this.vertx;
    }

}
