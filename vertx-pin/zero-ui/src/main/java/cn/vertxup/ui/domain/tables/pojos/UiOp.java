/*
 * This file is generated by jOOQ.
*/
package cn.vertxup.ui.domain.tables.pojos;


import cn.vertxup.ui.domain.tables.interfaces.IUiOp;

import java.time.LocalDateTime;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UiOp implements IUiOp {

    private static final long serialVersionUID = 1936890601;

    private String        key;
    private String        action;
    private String        text;
    private String        event;
    private String        clientKey;
    private String        clientId;
    private String        config;
    private String        plugin;
    private String        controlId;
    private Boolean       active;
    private String        sigma;
    private String        metadata;
    private String        language;
    private LocalDateTime createdAt;
    private String        createdBy;
    private LocalDateTime updatedAt;
    private String        updatedBy;

    public UiOp() {}

    public UiOp(UiOp value) {
        this.key = value.key;
        this.action = value.action;
        this.text = value.text;
        this.event = value.event;
        this.clientKey = value.clientKey;
        this.clientId = value.clientId;
        this.config = value.config;
        this.plugin = value.plugin;
        this.controlId = value.controlId;
        this.active = value.active;
        this.sigma = value.sigma;
        this.metadata = value.metadata;
        this.language = value.language;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public UiOp(
        String        key,
        String        action,
        String        text,
        String        event,
        String        clientKey,
        String        clientId,
        String        config,
        String        plugin,
        String        controlId,
        Boolean       active,
        String        sigma,
        String        metadata,
        String        language,
        LocalDateTime createdAt,
        String        createdBy,
        LocalDateTime updatedAt,
        String        updatedBy
    ) {
        this.key = key;
        this.action = action;
        this.text = text;
        this.event = event;
        this.clientKey = clientKey;
        this.clientId = clientId;
        this.config = config;
        this.plugin = plugin;
        this.controlId = controlId;
        this.active = active;
        this.sigma = sigma;
        this.metadata = metadata;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    @Override
    public String getKey() {
        return this.key;
    }

    @Override
    public UiOp setKey(String key) {
        this.key = key;
        return this;
    }

    @Override
    public String getAction() {
        return this.action;
    }

    @Override
    public UiOp setAction(String action) {
        this.action = action;
        return this;
    }

    @Override
    public String getText() {
        return this.text;
    }

    @Override
    public UiOp setText(String text) {
        this.text = text;
        return this;
    }

    @Override
    public String getEvent() {
        return this.event;
    }

    @Override
    public UiOp setEvent(String event) {
        this.event = event;
        return this;
    }

    @Override
    public String getClientKey() {
        return this.clientKey;
    }

    @Override
    public UiOp setClientKey(String clientKey) {
        this.clientKey = clientKey;
        return this;
    }

    @Override
    public String getClientId() {
        return this.clientId;
    }

    @Override
    public UiOp setClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    @Override
    public String getConfig() {
        return this.config;
    }

    @Override
    public UiOp setConfig(String config) {
        this.config = config;
        return this;
    }

    @Override
    public String getPlugin() {
        return this.plugin;
    }

    @Override
    public UiOp setPlugin(String plugin) {
        this.plugin = plugin;
        return this;
    }

    @Override
    public String getControlId() {
        return this.controlId;
    }

    @Override
    public UiOp setControlId(String controlId) {
        this.controlId = controlId;
        return this;
    }

    @Override
    public Boolean getActive() {
        return this.active;
    }

    @Override
    public UiOp setActive(Boolean active) {
        this.active = active;
        return this;
    }

    @Override
    public String getSigma() {
        return this.sigma;
    }

    @Override
    public UiOp setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    @Override
    public String getMetadata() {
        return this.metadata;
    }

    @Override
    public UiOp setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    @Override
    public String getLanguage() {
        return this.language;
    }

    @Override
    public UiOp setLanguage(String language) {
        this.language = language;
        return this;
    }

    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public UiOp setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    @Override
    public UiOp setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public UiOp setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public UiOp setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UiOp (");

        sb.append(key);
        sb.append(", ").append(action);
        sb.append(", ").append(text);
        sb.append(", ").append(event);
        sb.append(", ").append(clientKey);
        sb.append(", ").append(clientId);
        sb.append(", ").append(config);
        sb.append(", ").append(plugin);
        sb.append(", ").append(controlId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(metadata);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IUiOp from) {
        setKey(from.getKey());
        setAction(from.getAction());
        setText(from.getText());
        setEvent(from.getEvent());
        setClientKey(from.getClientKey());
        setClientId(from.getClientId());
        setConfig(from.getConfig());
        setPlugin(from.getPlugin());
        setControlId(from.getControlId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IUiOp> E into(E into) {
        into.from(this);
        return into;
    }

    public UiOp(io.vertx.core.json.JsonObject json) {
        fromJson(json);
    }
}
